{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/app.jsx","webpack:///./src/js/components/BulkImportForm.jsx","webpack:///./src/js/components/Generic.jsx","webpack:///./src/js/components/OrderForm.jsx","webpack:///./src/js/components/OrderFormItem.jsx"],"names":["console","log","app","eventsTracker","trackEventStart","context","merge","event","start","performance","now","mergeBefore","push","trackEventEnd","map","end","undefined","time","mergeAfter","createOptionsArray","simpleArray","item","value","name","optionValueExists","groupName","unlikely","getOptionName","getOptionFirst","grp","getOptionGroup","length","ret","OrderForm","config","options","error","ifNotExists","forEach","compareOptions","renderOptions","placeholder","Array","isArray","_options","option","optionValue","currentValue","v1","String","valueOf","v2","init","self","Object","assign","format","delivery_amount","vector","mutations","delivery_type","window","gene_quotes_options","defaultConfig","gene_quotes_config","order_form","document","getElementById","registerSelf","Component","ReactDOM","render","geneQuotes","BulkImportForm","props","submitFile","bind","fileInput","React","createRef","state","isOpen","isOpenOnMount","isSubmitting","prevProps","prevState","alert","parent","input","current","file","files","formData","FormData","append","axios","post","ajax_url","useCredentials","headers","then","response","data","success","items","errors","count","cap","hitCap","_items_","generateNewItemObject","generateItemKey","initialState","setTimeout","open","downloadSrc","display","toggleBulkImport","gene_synthesis_url","subcloning_url","mutagenesis_url","shallowEqualObjects","require","shallowEqualArrays","shallowCompare","thing1","thing2","Debugger","component","more","toString","thing","JSON","prune","wordsWithSpaces","words","constructor","filter","word","join","Button","text","onClick","createElement","OnMount","onMount","tagName","provideTests","comp","index","addTest","callback","more_props","e","renderTests","ShowIf","p","test","style","children","CheckableButton","checked","onChange","className","DEFAULT_MAX_DEPTH","DEFAULT_ARRAY_MAX_LENGTH","DEFAULT_PRUNED_VALUE","seen","iterator","forEachEnumerableOwnProperty","obj","k","prototype","hasOwnProperty","call","forEachEnumerableProperty","forEachProperty","excluded","getOwnPropertyNames","getPrototypeOf","defineProperty","Date","toJSON","cx","escapable","meta","quote","string","lastIndex","replace","a","c","charCodeAt","slice","depthDecr","arrayMaxLength","prunedString","replacer","allProperties","inheritedProperties","str","key","holder","i","v","partial","toPrunedJSON","isFinite","indexOf","replacement","apply","Math","min","arguments","parse","module","exports","itemAppend","getItemComponent","setItemComponent","itemDeleteViaKey","itemSetChecked","itemEditViaKey","allItemsChecked","handleBulkActionSubmit","handleEntriesSubmit","handleBulkSelectCheckboxChange","countChecked","resetBulkAction","sendToServer","assembleFormData","saveSessionState","getSessionState","itemsReIndex","itemsMapState","itemComponentsForEach","onClickHandleBackToOrderForm","OrderSummarySidebar","itemsHaveErrors","buildItemsMemo","isOrderSummary","itemCallbacks","insert","deleteViaKey","setChecked","editViaKey","registerViaKey","isLoading","forcedUpdatesQueued","_setUniqueStateCounter","lastItemKey","lastItemsUsedInItemsMemo","itemsChanged","itemComponents","entriesUncontrolledInput","bulkImportForm","renderCount","localStorageKey","localStorageDuration","Generic","registerTests","itemsAreEqual","prevPropsWithNonPrevItemsRef","nextProps","prevItems","nextItems","t1","areEqual","timeEnd","OrderFormItems","memo","toSave","floor","itemSnapshot","includes","localStorage","setItem","stringify","compareTimeElapsed","parseInt","expired","getItem","timeNow","session","setStateWithForcedNewState","setState","itemIndex","booleanChecked","forceUpdate","overrides","_key","callbacks","objectToMerge","cb","Number","isInteger","indexes","eventTracker","setInterval","addClass","prev","itemCallback","preventDefault","desired","removeCount","entries","confirm","toAdd","bulk_action","reduce","result","unSelectAllItems","isNowChecked","target","rawData","appendData","_item","getField","vectorFile","submitType","saveToSession","savedItemKey","submit_type","ajax_action","subtotal","serverResponse","price","redirect","location","item_errors","item_prices","savedItemExistsAndHasErrors","thisItemKey","serverError","_errors","hasErrors","cls","gene_synthesis_template_url","subcloning_template_url","mutagenesis_template_url","OrderFormItem","setField","getVectorOptionGroupName","scrollIntoView","filterDnaSequence","filterProteinSequence","InvalidCountFromString","onChangeBasic","onChangeCheckbox","onClickDeleteSelf","onClickToggleSelf","onClickClearSelf","onClickEditSelf","Label","Checkbox","Input","Textarea","TextareaPlus","getButton","renderErrors","initMemoComponents","memos","getInitialState","didUpdate","fieldWasSet","domNode","regex","whiteSpace","stopAndAfter","notACGT","notValidProteinSequence","invalidReplacementCharacter","random","testInput","ItemHeader","SequenceAndServiceTypeWrapper","GeneSynthesisDnaWrapper","GeneSynthesisProteinWrapper","getHtmlId","getProteinTotalLength","SubcloningSequenceTargetGene","SubcloningSequenceSourcePlasmid","SubcloningSequenceFinalPlasmid","MutagenesisSequenceFinal","MutagenesisSequenceTemplate","MutationsSubWrapper","active","DeliveryTypeWrapper","wrapperProps","title","id","disabled","label","DeliverySubWrapper","KozakSequenceWrapper","allow_optimize_and_kozak","OptimizeSequenceWrapper","VectorWrapper","vector_other","CloningSites","addItemButtonWrapper","nextState","service_type","initialServiceType","sequence_type","optimize_sequence","add_kozak_sequence","delivery_lyophilized","protein_sequence","newState","keys","fromState","sequence","filterInvalid","RegExp","len","getStrlen","filterField","filteredValue","defaultValue","resetState","lengthRaw","lengthFiltered","invalidCount","invalidChar","InvalidCountFromProps","doLength","doInvalid","lengthLabel","_lengthLabel","htmlFor","type","inline","_ref","ref","sqt","svt","optimize","kozak","showDeliveryType","field","total","valid","invalid","renderOrderSummaryBody","updates","sq","sv","delivery_buffer","delivery_glycerol"],"mappings":"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":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/js/app.jsx\");\n","// import React, { Component } from 'react';\r\n// import React, { useState } from 'react';\r\n\r\nimport OrderForm from './components/OrderForm';\r\n\r\n(function () {\r\n\r\n    console.log(\"gene-quotes app.jsx\");\r\n\r\n    let app = {};\r\n    app.eventsTracker = {};\r\n\r\n    app.trackEventStart = function( context = 'default', merge ){\r\n\r\n        let event = {};\r\n        event.start = performance.now();\r\n\r\n        if ( merge ) {\r\n            event.mergeBefore = merge;\r\n        }\r\n\r\n        if ( ! this.eventsTracker[context] ) {\r\n            this.eventsTracker[context] = [];\r\n        }\r\n\r\n        this.eventsTracker[context].push( event );\r\n    };\r\n\r\n    app.trackEventEnd = function( context = 'default', merge ){\r\n\r\n        if ( this.eventsTracker[context] ) {\r\n            this.eventsTracker[context] = this.eventsTracker[context].map( event => {\r\n\r\n                if ( event && event.end === undefined ) {\r\n                    event.end = performance.now();\r\n                    event.time = event.end - event.start;\r\n\r\n                    if ( merge ) {\r\n                        event.mergeAfter = merge;\r\n                    }\r\n\r\n                    console.log( \"Track Event (\" + context + \"): \", event.time, event );\r\n                }\r\n\r\n                return event;\r\n\r\n            } );\r\n        }\r\n    };\r\n\r\n    // helps to store label/value pairs for select/checkboxes etc.\r\n    app.createOptionsArray = function (simpleArray) {\r\n        return simpleArray.map(item => {\r\n            return {\r\n                value: item[0],\r\n                name: item[1] || item[0]\r\n            }\r\n        });\r\n    };\r\n\r\n    app.optionValueExists = function( groupName, value ) {\r\n        let unlikely = \"__unlikelyValue\";\r\n        return this.getOptionName( groupName, value, unlikely ) === unlikely;\r\n    };\r\n\r\n    // for initial state values or w/e if needed\r\n    app.getOptionFirst = function( groupName ) {\r\n        let grp = this.getOptionGroup( groupName );\r\n\r\n        // returning strictly empty string as default might cause issues if grp has\r\n        // the first option with a different false-like value. For now though, everything is fine.\r\n        return grp && grp.length > 0 && grp[0].value ? grp[0].value : \"\";\r\n    };\r\n\r\n    // reference the instantiated react component in case it makes any last second modifications,\r\n    // this has a side effect of the this function returning nothing until first render.\r\n    app.getOptionGroup = function (groupName) {\r\n        let ret = this.OrderForm ? this.OrderForm.config.options[groupName] : [];\r\n\r\n        if ( ! ret ) {\r\n            console.error( \"Option group not found\", groupName, this.OrderForm, ret );\r\n        }\r\n\r\n        return ret;\r\n    };\r\n\r\n    // ie, f( 'format', 'tubes' ) = \"Tubes\"\r\n    // references the OrderForm component which may make last second modifications to option groups,\r\n    // therefore, this won't return anything until OrderForm is mounted.\r\n    app.getOptionName = function (groupName, value, ifNotExists) {\r\n\r\n        // careful or you'll break optionValueExists method - we need to have a predictable ifNotExists value.\r\n        // note: set name now to maybe the incorrect value, and maybe change it below.\r\n        let name = typeof( ifNotExists ) === 'undefined' ? \"\" : ifNotExists;\r\n\r\n        // console.log('getOptionName...', groupName, value, ifNotExists );\r\n\r\n        if ( this.OrderForm && this.OrderForm.config.options && this.OrderForm.config.options[groupName] ){\r\n\r\n            // console.log('getOptionName.....', this.OrderForm.config.options[groupName] );\r\n\r\n            this.OrderForm.config.options[groupName].forEach( item => {\r\n                if (this.compareOptions(value, item.value)) {\r\n                    // console.log('getOptionName.......', value, item.value );\r\n                    name = item.name;\r\n                }\r\n            });\r\n        }\r\n\r\n        return name;\r\n    };\r\n\r\n    // placeholder is the first option without a value\r\n    app.renderOptions = function (options, placeholder) {\r\n\r\n        if ( ! Array.isArray( options ) ) {\r\n            options = [];\r\n            console.error( \"app.renderOptions has non-array options\", options );\r\n        }\r\n\r\n        if (placeholder) {\r\n\r\n            // array unshift would be nice but will modify the referenced array,\r\n            // causing each placeholder to have a permanent effect over time, resulting\r\n            // in many placeholders.\r\n            let _options = [];\r\n\r\n            _options.push({\r\n                value: \"\",\r\n                name: placeholder\r\n            });\r\n\r\n            options.forEach( option => {\r\n                _options.push(option);\r\n            });\r\n\r\n            options = _options;\r\n        }\r\n\r\n        return options.map(option => {\r\n\r\n            // actually, controlled elements in react shouldn't use selected on options,\r\n            // but should set <select value=\"\"> instead. We could turn this on if we\r\n            // end up using non-controlled components\r\n            // let selected = this.compareOptions(option.value, currentValue);\r\n            return (\r\n                <option value={option.value}>{option.name}</option>\r\n            )\r\n        });\r\n    };\r\n\r\n    // simply converts to string (in a way that we may have to change over time)\r\n    // to return true of values equate using loose comparison.\r\n    app.compareOptions = function (optionValue, currentValue) {\r\n\r\n        // maybe necessary maybe not I don't know how .valueOf()\r\n        // works with strings in all cases.\r\n        if (!optionValue && !currentValue) {\r\n            return true;\r\n        }\r\n\r\n        let v1 = new String(optionValue).valueOf();\r\n        let v2 = new String(currentValue).valueOf();\r\n        return v1 === v2;\r\n    };\r\n\r\n    app.init = function () {\r\n\r\n        let self = this;\r\n\r\n        // each option group can be overriden by previously defined global variable\r\n        // group names correspond to names on <select> or in some cases <input type=\"checkbox\">\r\n        let options = Object.assign({\r\n            format: self.createOptionsArray([\r\n                [\"tubes\", \"Tubes\"],\r\n                [\"plate\", \"Plate\"]\r\n            ]),\r\n            delivery_amount: self.createOptionsArray([\r\n                // indicate that this value needs to be overwritten\r\n                [1, 'Config Error'],\r\n            ]),\r\n            vector: self.createOptionsArray([\r\n                [1, 'Config Error'],\r\n            ]),\r\n            mutations: self.createOptionsArray([\r\n                [1, 'Config Error'],\r\n            ]),\r\n            delivery_type: self.createOptionsArray([\r\n                [1, 'Config Error'],\r\n            ]),\r\n        }, window.gene_quotes_options || {});\r\n\r\n        // don't really need anything here\r\n        let defaultConfig = {};\r\n\r\n        let config = Object.assign(defaultConfig, window.gene_quotes_config || {});\r\n\r\n        // now add the options (order matters here)\r\n        config.options = options;\r\n\r\n        const order_form = document.getElementById('gq-order-form');\r\n\r\n        if (order_form) {\r\n\r\n            // call on mount\r\n            const registerSelf = ( Component ) => {\r\n                self.OrderForm = Component;\r\n                console.log( \"Register Order Form...\", Component, self );\r\n            };\r\n\r\n            // is it necessary now to pass the config into the component? ... We could\r\n            // just store them globally in window.\r\n            ReactDOM.render(<OrderForm\r\n                registerSelf={registerSelf}\r\n                config={config}\r\n            />, order_form);\r\n        }\r\n    };\r\n\r\n    window.geneQuotes = app;\r\n    window.geneQuotes.init();\r\n\r\n}());","// import Generic from './Generic';\r\n\r\n/**\r\n * Bulk import form.. Download templates files, then attach and upload.\r\n */\r\nexport default class BulkImportForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.submitFile = this.submitFile.bind(this);\r\n\r\n        this.fileInput = React.createRef();\r\n\r\n        // unlikely that we will need to use isOpenOnMount\r\n        // store state in this component so that parent doesn't have to re-render it.\r\n        this.state = {\r\n            isOpen: this.props.isOpenOnMount || false,\r\n        };\r\n\r\n        // async nature of state makes it better to not use state for this.\r\n        this.isSubmitting = false;\r\n    }\r\n\r\n    shouldComponentUpdate(prevProps, prevState) {\r\n\r\n        if (prevState.isOpen !== this.state.isOpen) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    submitFile() {\r\n        console.log(\"Submit file...\", this.fileInput, this.state);\r\n\r\n        if (this.isSubmitting) {\r\n            alert(\"Please wait a few seconds for your last import to finish processing.\");\r\n            return;\r\n        } else {\r\n            this.isSubmitting = true;\r\n        }\r\n\r\n        let OrderForm = this.props.parent;\r\n        let input = this.fileInput.current;\r\n        let file = input && input.files && input.files[0] ? input.files[0] : false;\r\n\r\n        if (!file) {\r\n            this.isSubmitting = false;\r\n            alert(\"Please attach the file that you want to import.\");\r\n            return;\r\n        }\r\n\r\n        let formData = new FormData();\r\n        formData.append('ajax_action', 'bulk_import');\r\n        formData.append('bulk_import_file', file);\r\n\r\n        axios.post(OrderForm.config.ajax_url, formData, {\r\n            useCredentials: true,\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }).then(response => {\r\n\r\n            this.isSubmitting = false;\r\n\r\n            let data = response.data || {};\r\n\r\n            let success = data.success || false;\r\n            let items = Array.isArray( data.items ) || [];\r\n            let errors = data.errors || [];\r\n\r\n            console.log(\"Bulk Import Response\", data);\r\n\r\n            if ( errors || ! success || ! items ) {\r\n\r\n                errors = errors ? errors : [ \"[008] An unknown error occurred.\" ];\r\n\r\n                // todo: show errors to the user...\r\n                console.log(errors);\r\n\r\n            } else {\r\n\r\n                // in reality, 500 items is probably way too many, both for the client-side\r\n                // and for server-side checkout. Expect 100+ to be very rare however.\r\n                let count = 0;\r\n                let cap = 500;\r\n                let hitCap = false;\r\n\r\n                items.forEach( item => {\r\n\r\n                    count++;\r\n\r\n                    if ( count > cap ) {\r\n                        hitCap = true;\r\n                    } else {\r\n                        OrderForm._items_.push( OrderForm.generateNewItemObject( OrderForm._items_.length, OrderForm.generateItemKey(), {\r\n                            initialState: item\r\n                        } ) );\r\n                    }\r\n                } );\r\n\r\n                setTimeout( () => {\r\n                    if ( hitCap ) {\r\n                        alert( count + \" items were added. The number of items inserted reached the cap (\" + cap + \"). Items beyond the cap were not inserted.\" );\r\n                    } else {\r\n                        alert( count + \" items were added.\" );\r\n                    }\r\n                });\r\n            }\r\n\r\n        })\r\n            .catch(error => {\r\n                this.isSubmitting = false;\r\n\r\n                alert(\"[3] An unknown error occurred.\");\r\n                console.error(\"Bulk Import Error\", error);\r\n            });\r\n    }\r\n\r\n    render() {\r\n\r\n        let open = this.state.isOpen;\r\n        let downloadSrc = \"./assets/fa-png/download.png\";\r\n\r\n        // don't dismount the input type file\r\n        return (\r\n            <div className=\"bulk-import-form\" style={open ? {} : {display: \"none\"}}>\r\n                {open && (\r\n                    <div className=\"bulk-import-close\">\r\n                        <button className=\"css-reset\" onClick={this.props.parent.toggleBulkImport}>Close</button>\r\n                    </div>\r\n                )}\r\n                <table>\r\n                    <tbody>\r\n                    {open && (\r\n                        <tr>\r\n                            <td className=\"cell-msg\">\r\n                                <p>Download 1 or more template files based on the service type of the genes you\r\n                                    want to import. To import more than 1 service type, upload multiple files one at\r\n                                    a time.</p>\r\n                            </td>\r\n                            <td className=\"cell-templates\">\r\n                                <p><a title=\"Download Excel Template\" href={this.props.gene_synthesis_url}><img\r\n                                    src={downloadSrc} download/>{` `}Gene\r\n                                    Synthesis Excel Template</a></p>\r\n                                <p><a title=\"Download Excel Template\" href={this.props.subcloning_url}><img\r\n                                    src={downloadSrc} download/>{` `}Subcloning\r\n                                    Only Excel Template</a></p>\r\n                                <p><a title=\"Download Excel Template\"\r\n                                      href={this.props.mutagenesis_url}><img src={downloadSrc} download/>{` `}Mutagenesis\r\n                                    Excel Template</a></p>\r\n                            </td>\r\n                        </tr>\r\n                    )}\r\n                    <tr>\r\n                        <td className=\"cell-file\">\r\n                            <input ref={this.fileInput} type=\"file\" name=\"bulk_import_file\"/>\r\n                        </td>\r\n                        {open && (\r\n                            <td className=\"cell-submit\">\r\n                                <div className=\"gq-btn btn-orange\">\r\n                                    <button onClick={this.submitFile}>Import</button>\r\n                                </div>\r\n                            </td>\r\n                        )}\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","let shallowEqualObjects = require(\"shallow-equal/objects\");\r\nlet shallowEqualArrays = require(\"shallow-equal/arrays\");\r\n\r\nconst shallowCompare = function( thing1, thing2 ){\r\n\r\n    if ( Array.isArray( thing1 ) && Array.isArray( thing2 ) ) {\r\n\r\n        return shallowEqualArrays( thing1, thing2 );\r\n\r\n    } else if ( typeof( thing1 ) === 'object' && typeof( thing2 ) === 'object' && thing1 !== null && thing2 !== null ) {\r\n\r\n        return shallowEqualObjects( thing1, thing2 );\r\n\r\n    }\r\n\r\n    // not sure what a good fallback is but I think this is fine...\r\n    // although, i don't think === is reliable on arrays and objects...\r\n    return thing1 === thing2 || null;\r\n};\r\n\r\nconst Debugger = function( name, component, more ){\r\n\r\n    const toString = ( thing ) => {\r\n        // JSON.stringify throws errors when encountering recursion\r\n        // return vuvuzela.stringify( thing );\r\n        // return dump( thing );\r\n        return JSON.prune( thing, 2, 20 );\r\n    };\r\n\r\n    return (\r\n        <div className=\"debugger\">\r\n            <p>{name} State: {toString(component.state)}</p>\r\n            <p>{name} Props: {toString(component.props)}</p>\r\n            <p>{name} More: {toString(more)}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\n// ie. classList\r\nconst wordsWithSpaces = function( words ){\r\n    // words = words || [];\r\n    words = words.constructor === Array ? words : [];\r\n    return words.filter( (word) => { return word || false } ).join( \" \" );\r\n};\r\n\r\nconst Button = function( text, onClick, props ){\r\n    props = props || {};\r\n    props.onClick = props.onClick || onClick;\r\n    return React.createElement( 'button', props, text );\r\n};\r\n\r\nclass OnMount{\r\n\r\n    componentDidMount(){\r\n        this.props.onMount().bind(this);\r\n    }\r\n\r\n    render(){\r\n        return React.createElement( this.props.tagName, {...this.props, tagName: undefined} );\r\n    }\r\n}\r\n\r\n// class Select extends React.Component{\r\n//\r\n//     componentDidMount(){\r\n//         this.props.onMount();\r\n//     }\r\n//\r\n//     render(){\r\n//\r\n//     }\r\n// }\r\n\r\nconst provideTests = function( comp ){\r\n\r\n    var index = 'testProvider_tests';\r\n\r\n    comp.addTest = ( name, callback, more_props ) => {\r\n        comp[index] = comp[index] || [];\r\n        comp[index].push(Button( name, (e) => {\r\n            console.log(\"Test: \" + name );\r\n            callback(e);\r\n        }, more_props ));\r\n    };\r\n\r\n    comp.renderTests = () => {\r\n        return ( <p className=\"tests\">Tests: {comp[index]}</p> );\r\n    };\r\n};\r\n\r\nconst ShowIf = (props) => {\r\n\r\n    let p = {\r\n        ...props,\r\n        test: undefined,\r\n        style: props.test ? {} : { display: 'none' },\r\n    };\r\n\r\n    return (\r\n        <div {...p}>{props.children}</div>\r\n    )\r\n};\r\n\r\n/**\r\n * TODO: would it be better to use a hidden input type checkbox and label with button inside?\r\n * TODO: ... when using a button the value only exists in the react state and not in a form otherwise\r\n *\r\n * @param checked\r\n * @param onChange\r\n * @param text\r\n * @param id\r\n * @param props\r\n * @returns {*}\r\n * @constructor\r\n */\r\nconst CheckableButton = function ( { checked, onChange, text, ...props }) {\r\n    props.className = 'css-reset' + ( props.checked ? ' active' : '' );\r\n    return (<button {...props}>{text}</button>);\r\n};\r\n\r\n// JSON.prune : a function to stringify any object without overflow\r\n// two additional optional parameters :\r\n//   - the maximal depth (default : 6)\r\n//   - the maximal length of arrays (default : 50)\r\n// You can also pass an \"options\" object.\r\n// examples :\r\n//   var json = JSON.prune(window)\r\n//   var arr = Array.apply(0,Array(1000)); var json = JSON.prune(arr, 4, 20)\r\n//   var json = JSON.prune(window.location, {inheritedProperties:true})\r\n// Web site : http://dystroy.org/JSON.prune/\r\n// JSON.prune on github : https://github.com/Canop/JSON.prune\r\n// This was discussed here : http://stackoverflow.com/q/13861254/263525\r\n// The code is based on Douglas Crockford's code : https://github.com/douglascrockford/JSON-js/blob/master/json2.js\r\n// No effort was done to support old browsers. JSON.prune will fail on IE8.\r\n(function () {\r\n    'use strict';\r\n\r\n    var DEFAULT_MAX_DEPTH = 6;\r\n    var DEFAULT_ARRAY_MAX_LENGTH = 50;\r\n    var DEFAULT_PRUNED_VALUE = '\"-pruned-\"';\r\n    var seen; // Same variable used for all stringifications\r\n    var iterator; // either forEachEnumerableOwnProperty, forEachEnumerableProperty or forEachProperty\r\n\r\n    // iterates on enumerable own properties (default behavior)\r\n    var forEachEnumerableOwnProperty = function(obj, callback) {\r\n        for (var k in obj) {\r\n            if (Object.prototype.hasOwnProperty.call(obj, k)) callback(k);\r\n        }\r\n    };\r\n    // iterates on enumerable properties\r\n    var forEachEnumerableProperty = function(obj, callback) {\r\n        for (var k in obj) callback(k);\r\n    };\r\n    // iterates on properties, even non enumerable and inherited ones\r\n    // This is dangerous\r\n    var forEachProperty = function(obj, callback, excluded) {\r\n        if (obj==null) return;\r\n        excluded = excluded || {};\r\n        Object.getOwnPropertyNames(obj).forEach(function(k){\r\n            if (!excluded[k]) {\r\n                callback(k);\r\n                excluded[k] = true;\r\n            }\r\n        });\r\n        forEachProperty(Object.getPrototypeOf(obj), callback, excluded);\r\n    };\r\n\r\n    Object.defineProperty(Date.prototype, \"toPrunedJSON\", {value:Date.prototype.toJSON});\r\n\r\n    var\tcx = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\r\n        escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\r\n        meta = {\t// table of character substitutions\r\n            '\\b': '\\\\b',\r\n            '\\t': '\\\\t',\r\n            '\\n': '\\\\n',\r\n            '\\f': '\\\\f',\r\n            '\\r': '\\\\r',\r\n            '\"' : '\\\\\"',\r\n            '\\\\': '\\\\\\\\'\r\n        };\r\n\r\n    function quote(string) {\r\n        escapable.lastIndex = 0;\r\n        return escapable.test(string) ? '\"' + string.replace(escapable, function (a) {\r\n            var c = meta[a];\r\n            return typeof c === 'string'\r\n                ? c\r\n                : '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\r\n        }) + '\"' : '\"' + string + '\"';\r\n    }\r\n\r\n\r\n    var prune = function (value, depthDecr, arrayMaxLength) {\r\n        var prunedString = DEFAULT_PRUNED_VALUE;\r\n        var replacer;\r\n        if (typeof depthDecr == \"object\") {\r\n            var options = depthDecr;\r\n            depthDecr = options.depthDecr;\r\n            arrayMaxLength = options.arrayMaxLength;\r\n            iterator = options.iterator || forEachEnumerableOwnProperty;\r\n            if (options.allProperties) iterator = forEachProperty;\r\n            else if (options.inheritedProperties) iterator = forEachEnumerableProperty\r\n            if (\"prunedString\" in options) {\r\n                prunedString = options.prunedString;\r\n            }\r\n            if (options.replacer) {\r\n                replacer = options.replacer;\r\n            }\r\n        } else {\r\n            iterator = forEachEnumerableOwnProperty;\r\n        }\r\n        seen = [];\r\n        depthDecr = depthDecr || DEFAULT_MAX_DEPTH;\r\n        arrayMaxLength = arrayMaxLength || DEFAULT_ARRAY_MAX_LENGTH;\r\n        function str(key, holder, depthDecr) {\r\n            var i, k, v, length, partial, value = holder[key];\r\n\r\n            if (value && typeof value === 'object' && typeof value.toPrunedJSON === 'function') {\r\n                value = value.toPrunedJSON(key);\r\n            }\r\n            if (value && typeof value.toJSON === 'function') {\r\n                value = value.toJSON();\r\n            }\r\n\r\n            switch (typeof value) {\r\n                case 'string':\r\n                    return quote(value);\r\n                case 'number':\r\n                    return isFinite(value) ? String(value) : 'null';\r\n                case 'boolean':\r\n                case 'null':\r\n                    return String(value);\r\n                case 'object':\r\n                    if (!value) {\r\n                        return 'null';\r\n                    }\r\n                    if (depthDecr<=0 || seen.indexOf(value)!==-1) {\r\n                        if (replacer) {\r\n                            var replacement = replacer(value, prunedString, true);\r\n                            return replacement===undefined ? undefined : ''+replacement;\r\n                        }\r\n                        return prunedString;\r\n                    }\r\n                    seen.push(value);\r\n                    partial = [];\r\n                    if (Object.prototype.toString.apply(value) === '[object Array]') {\r\n                        length = Math.min(value.length, arrayMaxLength);\r\n                        for (i = 0; i < length; i += 1) {\r\n                            partial[i] = str(i, value, depthDecr-1) || 'null';\r\n                        }\r\n                        v = '[' + partial.join(',') + ']';\r\n                        if (replacer && value.length>arrayMaxLength) return replacer(value, v, false);\r\n                        return v;\r\n                    }\r\n                    iterator(value, function(k) {\r\n                        try {\r\n                            v = str(k, value, depthDecr-1);\r\n                            if (v) partial.push(quote(k) + ':' + v);\r\n                        } catch (e) {\r\n                            // this try/catch due to forbidden accessors on some objects\r\n                        }\r\n                    });\r\n                    return '{' + partial.join(',') + '}';\r\n                case 'function':\r\n                case 'undefined':\r\n                    return replacer ? replacer(value, undefined, false) : undefined;\r\n            }\r\n        }\r\n        return str('', {'': value}, depthDecr);\r\n    };\r\n\r\n    prune.log = function() {\r\n        console.log.apply(console, Array.prototype.map.call(arguments, function(v) {\r\n            return JSON.parse(JSON.prune(v));\r\n        }));\r\n    };\r\n    prune.forEachProperty = forEachProperty; // you might want to also assign it to Object.forEachProperty\r\n\r\n    JSON.prune = prune;\r\n}());\r\n\r\nmodule.exports = {\r\n    CheckableButton: CheckableButton,\r\n    ShowIf: ShowIf,\r\n    Debugger: Debugger,\r\n    Button: Button,\r\n    provideTests: provideTests,\r\n    wordsWithSpaces: wordsWithSpaces,\r\n    shallowCompare: shallowCompare,\r\n};","import Generic from './Generic';\r\nimport OrderFormItem from './OrderFormItem';\r\nimport BulkImportForm from './BulkImportForm';\r\n\r\n// import update from 'immutability-helper';\r\n// import { Provider } from 'react-redux';\r\n// import { connect } from 'react-redux';\r\n// import { increment, decrement, reset } from './actionCreators'\r\n\r\n// the list of why js is stupid\r\n// 1. had to google how to replace all occurences of a single character in a string\r\n// the answers included using regex or splitting and re-joining a string. there is nothing build into\r\n// the core of JS to achieve this simply.\r\n// 2. had to search how to check if something is an array, got 45 different answers.\r\n// 3. need es5 or 6 or to write your own loop to see if an item is in an array\r\n\r\n// links\r\n// this.setState({ class: Object.assign({}, this.state.class, { [element]: value }) }\r\n// https://reactjs.org/docs/react-api.html#createfactory\r\n// React.Children.toArray( this.props.children );\r\n// https://egghead.io/lessons/react-understand-react-children-utilities\r\n\r\nclass OrderForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // saves component globally\r\n        this.props.registerSelf(this);\r\n\r\n        this.generateItemKey = this.generateItemKey.bind(this);\r\n        this.itemAppend = this.itemAppend.bind(this);\r\n        this.getItemComponent = this.getItemComponent.bind(this);\r\n        this.setItemComponent = this.setItemComponent.bind(this);\r\n        this.itemDeleteViaKey = this.itemDeleteViaKey.bind(this);\r\n        this.itemSetChecked = this.itemSetChecked.bind(this);\r\n        this.itemEditViaKey = this.itemEditViaKey.bind(this);\r\n        this.allItemsChecked = this.allItemsChecked.bind(this);\r\n        this.handleBulkActionSubmit = this.handleBulkActionSubmit.bind(this);\r\n        this.handleEntriesSubmit = this.handleEntriesSubmit.bind(this);\r\n        this.handleBulkSelectCheckboxChange = this.handleBulkSelectCheckboxChange.bind(this);\r\n        this.countChecked = this.countChecked.bind(this);\r\n        this.resetBulkAction = this.resetBulkAction.bind(this);\r\n        this.sendToServer = this.sendToServer.bind(this);\r\n        this.assembleFormData = this.assembleFormData.bind(this);\r\n        this.saveSessionState = this.saveSessionState.bind(this);\r\n        this.getSessionState = this.getSessionState.bind(this);\r\n        this.itemsReIndex = this.itemsReIndex.bind(this);\r\n        this.itemsMapState = this.itemsMapState.bind(this);\r\n        this.itemComponentsForEach = this.itemComponentsForEach.bind(this);\r\n        this.onClickHandleBackToOrderForm = this.onClickHandleBackToOrderForm.bind(this);\r\n        this.OrderSummarySidebar = this.OrderSummarySidebar.bind(this);\r\n        this.itemsHaveErrors = this.itemsHaveErrors.bind(this);\r\n        this.buildItemsMemo = this.buildItemsMemo.bind(this);\r\n        this.toggleBulkImport = this.toggleBulkImport.bind(this);\r\n\r\n        this.state = {\r\n            format: 'tubes',\r\n            isOrderSummary: false,\r\n            errors: []\r\n        };\r\n\r\n        // we store a reference to this object in each OrderFormItem,\r\n        // which should be more efficient so that each item\r\n        // references a single object rather than referencing\r\n        // many function objects. Also, might be easier to\r\n        // add items here...\r\n        this.itemCallbacks = {\r\n            insert: () => {\r\n                this.itemAppend(1);\r\n            },\r\n            deleteViaKey: this.itemDeleteViaKey,\r\n            setChecked: this.itemSetChecked,\r\n            editViaKey: this.itemEditViaKey,\r\n            registerViaKey: this.setItemComponent,\r\n            sendToServer: this.sendToServer,\r\n        };\r\n\r\n        // for when we send data to the server.\r\n        // storing this in state might not be reliable to do async\r\n        // nature of this. When we're sending to server, we should\r\n        // show an alert is the value of this is true.\r\n        this.isLoading = false;\r\n\r\n        this.config = Object.assign({}, this.props.config || {});\r\n\r\n        // this already exists, but leaving this here so that you know that it does\r\n        this.config.options = this.config.options || {};\r\n\r\n        this.forcedUpdatesQueued = false;\r\n\r\n        // when we want to call setState and forceUpdate at the same time,\r\n        // we can instead increment this value and then include it in the setState\r\n        // call, which may (or may not) help prevent double rendering of the entire\r\n        // component in some instances. Its important because its possible that the setState\r\n        // call sets the same as the last state and in this case i'm pretty sure\r\n        // it still triggers a re-render, but not if\r\n        this._setUniqueStateCounter = 0;\r\n\r\n        // doesn't need to be in state\r\n        this.lastItemKey = 0;\r\n\r\n        // new way: I think its best to not store nested state. Instead,\r\n        // we can mutate this freely but have to call forceUpdate manually.\r\n        this._items_ = [];\r\n        this.lastItemsUsedInItemsMemo = [];\r\n        this.itemsChanged = false;\r\n        this.buildItemsMemo();\r\n\r\n        // OrderFormItem components indexed by key. So we can do, for example,\r\n        // this.itemComponents[this._items_[0].key].setState()...\r\n        // after appending a new item, the component is put into here upon mounting.\r\n        // see 'ref' callback.\r\n        this.itemComponents = {};\r\n\r\n        // <input> for number of entries\r\n        this.entriesUncontrolledInput = React.createRef();\r\n        this.bulkImportForm = React.createRef();\r\n\r\n        // testing\r\n        this.renderCount = 0;\r\n\r\n        this.localStorageKey = \"GeneQuotesOrderForm\";\r\n\r\n        // in seconds\r\n        this.localStorageDuration = 6 * 3600;\r\n\r\n        Generic.provideTests(this);\r\n        this.registerTests();\r\n    }\r\n\r\n    // didMount or ref callback tool\r\n    setItemComponent(key, Component) {\r\n        this.itemComponents[key] = Component;\r\n    }\r\n\r\n    // store the entire list of items in a memo. this should provide a decent optimization\r\n    // for when we have lots of items in the form and then perform stateful actions at higher\r\n    // levels, like with the bulk import form or order form controls. Remember also that each\r\n    // item has its own componentShouldUpdate function as well which will compare props and state,\r\n    // which means that doing an extra comparison here is sometimes wasteful. For this purpose\r\n    // we use this.itemsChanged, which we can set to true at certain time when we know that\r\n    // doing this memo comparison would otherwise be wasteful.\r\n    // If this eventually causes issues or is hard to maintain, it shouldn't hurt\r\n    // to simply un-memo it.\r\n    buildItemsMemo() {\r\n\r\n        let itemsAreEqual = (prevPropsWithNonPrevItemsRef, nextProps) => {\r\n\r\n            // using this.lastItemsUsedInItemsMemo seems to work, but is hacky. May remove the memo altogether\r\n            let prevItems = this.lastItemsUsedInItemsMemo;\r\n            let nextItems = nextProps.items;\r\n            let t1 = performance.now();\r\n\r\n            // turns out, prevPropsWithNonPrevItemsRef.items and nextProps.items both\r\n            // point the same reference. in other words, they are the same.\r\n            console.log(\"Are Equal ?\", prevItems, nextProps.items, '..prevPropsWithNonPrevItemsRef..:', prevPropsWithNonPrevItemsRef, nextProps);\r\n\r\n            // possible optimization - set to true if we know items have changed.\r\n            // but as far as I can tell, there is very little harm in not using this.\r\n            if (nextProps.itemsChanged) {\r\n                return false;\r\n            }\r\n\r\n            if (prevPropsWithNonPrevItemsRef.isOrderSummary !== nextProps.isOrderSummary) {\r\n                return false;\r\n            }\r\n\r\n            // lets us safely assume the same indexes exist in both arrays\r\n            if (prevItems.length !== nextItems.length) {\r\n                return false;\r\n            }\r\n\r\n            let i, areEqual = true;\r\n            console.time('itemsAreEqual');\r\n\r\n            // if this loop becomes large, then this entire memo may become useless.\r\n            // not large in number, I mean the body of the loop. Right now its very\r\n            // efficient because we only pass down the items order and whether or not its checked.\r\n            // if we passed down 20 props and looped 100 items, it may be a waste of time to\r\n            // do this in the first place, although 2000 comparisons is not huge, it could\r\n            // add up if we changed the state often, like on an inputs change event.\r\n            for (i = 0; i < prevItems.length; i++) {\r\n\r\n                if (prevItems[i].checked !== nextItems[i].checked) {\r\n                    areEqual = false;\r\n                    break;\r\n                }\r\n\r\n                if (prevItems[i].index !== nextItems[i].index) {\r\n                    areEqual = false;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            console.log('items areEqual result...', areEqual);\r\n            console.timeEnd('itemsAreEqual');\r\n            console.log('performance...', performance.now() - t1);\r\n            return areEqual;\r\n        };\r\n\r\n        this.OrderFormItems = React.memo(props => {\r\n\r\n            this.lastItemsUsedInItemsMemo = props.items.map(item => {\r\n                return {\r\n                    checked: item.checked,\r\n                    index: item.index\r\n                }\r\n            });\r\n\r\n            return (\r\n                <div className=\"order-form-items\">\r\n                    {props.items.map(item =>\r\n                        <OrderFormItem isOrderSummary={props.isOrderSummary} {...item} />\r\n                    )}\r\n                </div>\r\n            )\r\n\r\n        }, itemsAreEqual);\r\n    }\r\n\r\n    // maybe (or.. will) return undefined when an item is appended but not yet mounted\r\n    // between setting state and mounting the item, this can return null.\r\n    // be careful not to pass in component.key. The component itself only has\r\n    // access to _key, although this._items_[{int}].key === this._items_[{}]._key\r\n    getItemComponent(key) {\r\n        return this.itemComponents[key];\r\n    }\r\n\r\n    saveSessionState() {\r\n\r\n        let toSave = {\r\n            time: Math.floor(Date.now() / 1000),\r\n            format: this.state.format,\r\n            isOrderSummary: false,\r\n            items: this._items_.map(item => {\r\n\r\n                let itemSnapshot = {};\r\n                let key;\r\n\r\n                // build item props (ignoring some)\r\n                for (key in item) {\r\n                    if (item.hasOwnProperty(key)) {\r\n\r\n                        // for now, we don't need to track nested values such as arrays or objects,\r\n                        // but the main intention here is to ignore functions. Many functions are passed down\r\n                        // as properties, but when loading from session state, that's where we will ensure\r\n                        // that each item gets passed the function properties that it needs.\r\n                        if (['boolean', 'number', 'string'].includes(typeof( item[key] ))) {\r\n                            itemSnapshot[key] = item[key];\r\n                        }\r\n                    }\r\n                }\r\n\r\n                let c = this.getItemComponent(item.key);\r\n\r\n                // gets passed down to an item as prop and then initiates state on mounting (or in constructor)\r\n                itemSnapshot.initialState = Object.assign({}, c ? c.state : {}, {\r\n                    errors: [],\r\n                });\r\n\r\n                return itemSnapshot;\r\n            })\r\n        };\r\n\r\n        console.log(\"saveSession...\", toSave);\r\n\r\n        // we can store a subset of state or all of it.\r\n        // when loading from local storage we can always choose to\r\n        // ignore some of it. For example, I think its safe to ignore\r\n        // the server response and/or other errors here,\r\n        // if the user comes back at a later time, they'll have to\r\n        // re-submit to get the errors, but their data will remain in tact.\r\n        // warning: if item's state properties are references to other js objects,\r\n        // then json stringify could cause timeout issues. we're def expecting only\r\n        // string/integer values here.\r\n        window.localStorage.setItem(this.localStorageKey, JSON.stringify(toSave));\r\n    }\r\n\r\n    // compareTimeElapsed is likely this.localStorageDuration.\r\n    // if this number is provided and more than this number of seconds has passed, returns\r\n    // an empty object.\r\n    getSessionState(compareTimeElapsed) {\r\n\r\n        compareTimeElapsed = parseInt(compareTimeElapsed) || 0;\r\n\r\n        let expired, ret;\r\n\r\n        try {\r\n            ret = JSON.parse(window.localStorage.getItem(this.localStorageKey) || \"{}\");\r\n        } catch (e) {\r\n            ret = {};\r\n        }\r\n\r\n        if (compareTimeElapsed) {\r\n\r\n            if (ret.time) {\r\n                let timeNow = Math.floor(Date.now() / 1000);\r\n                expired = parseInt(ret.time + compareTimeElapsed) < timeNow;\r\n                console.log(\"Expired...\", timeNow, ret.time, expired);\r\n\r\n            } else {\r\n                // if time was not specified when saving, we'll just treat this as invalid/expired\r\n                expired = true;\r\n            }\r\n\r\n            return expired ? {} : ret;\r\n\r\n        } else {\r\n\r\n            // dont do any time comparisons.\r\n            // not likely we'll use this.\r\n            return ret;\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n        let session = this.getSessionState(this.localStorageDuration);\r\n\r\n        console.log(\"componentWillMount...\", session);\r\n\r\n        if (session && session.items && session.items.length > 0) {\r\n\r\n            this._items_ = session.items.map((item, index) => {\r\n\r\n                // generate the item with all the required callbacks and some overrides specified below.\r\n                return this.generateNewItemObject(index, this.generateItemKey(), {\r\n                    initialState: item.initialState || {},\r\n                    errors: []\r\n                });\r\n            });\r\n\r\n            this.setStateWithForcedNewState({\r\n                isOrderSummary: false,\r\n                format: session.format || 'tubes'\r\n            });\r\n\r\n        } else {\r\n\r\n            // add one item by default.\r\n            this.itemAppend(1);\r\n        }\r\n    }\r\n\r\n    itemEditViaKey(key) {\r\n\r\n        // open one item and close the rest (stored inside each items state)\r\n        this._items_.forEach((item, index) => {\r\n            if (this.itemComponents[item.key]) {\r\n                this.itemComponents[item.key].setState({\r\n                    open: item.key === key\r\n                });\r\n            }\r\n        });\r\n\r\n        // go the the \"order form\" view\r\n        this.setStateWithForcedNewState({\r\n            isOrderSummary: false,\r\n        });\r\n    }\r\n\r\n    // order form item gets this callback passed as prop\r\n    itemSetChecked(itemIndex, booleanChecked) {\r\n\r\n        console.log(\"itemSetChecked\", itemIndex, booleanChecked);\r\n\r\n        if (this._items_[itemIndex]) {\r\n            this._items_[itemIndex].checked = !!booleanChecked;\r\n        }\r\n\r\n        // force update ensures that bulk actions respond to the number of items checked,\r\n        // the order form items that don't have their checked state changed will benefit\r\n        // from shouldComponentUpdate in order to optimize this when we have a large number\r\n        // of items present.\r\n        this.forceUpdate();\r\n    }\r\n\r\n    // skeleton for inserting new order form item.\r\n    // index must be passed in and is likely the current length of the items\r\n    // key should be auto generated and must be unique among all other items.\r\n    // overrides can be used to set initial state\r\n    generateNewItemObject(index, key, overrides) {\r\n\r\n        key = key || this.generateItemKey();\r\n\r\n        // @see buildItemsMemo. Any primitive, mutable values must be taken\r\n        // into account there. ie. index and checked. although we can avoid\r\n        // keys and callbacks because those should never change.\r\n        // note: this.props.key not accessible in item component, hence _key.\r\n        let ret = {\r\n            key: key,\r\n            _key: key,\r\n            index: index,\r\n            checked: false,\r\n            callbacks: this.itemCallbacks,\r\n        };\r\n\r\n        // ie. add initial state\r\n        ret = overrides ? Object.assign(ret, overrides) : ret;\r\n\r\n        return ret;\r\n    }\r\n\r\n    // if we have to call many functions which all result in a forceUpdate,\r\n    // we can set a global variable so that forceUpdate does nothing and then\r\n    // manually call this function afterwards. This allows us to have functions\r\n    // that mutate this._items_ and then call forceUpdate un-conditionally.\r\n    forceUpdateFlushQueue() {\r\n        console.log(\"Force update flush...\");\r\n        this.forcedUpdatesQueued = false;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    forceUpdate() {\r\n        if (this.forcedUpdatesQueued) {\r\n            console.log(\"Force updates queued...\");\r\n        } else {\r\n            super.forceUpdate();\r\n        }\r\n    }\r\n\r\n    // I think ( but not 100% certain ) that this is more or less identical to:\r\n    // if ( this.shouldComponentUpdate() { this.forceUpdate() }, but only if\r\n    // shouldComponentUpdate exists (and not to mention, you have to feed the previous props\r\n    // and state into shouldComponentUpdate, and I don't know if there is an easy way to do this).\r\n    // does not support first parameter as callback function\r\n    setStateWithForcedNewState(objectToMerge = {}, cb) {\r\n\r\n        this._setUniqueStateCounter++;\r\n\r\n        this.setState(Object.assign({}, {\r\n            _setUniqueStateCounter: this._setUniqueStateCounter\r\n        }, objectToMerge), cb);\r\n    }\r\n\r\n    // pass an array of item objects or an integer for the number of items to append,\r\n    itemAppend(count = 1) {\r\n\r\n        if (!Number.isInteger(count)) {\r\n            // we used to sometimes pass an array of objects and trying to see if we're still doing that\r\n            alert(\"Item append not integer\");\r\n        }\r\n\r\n        for (let i = 0; i < count; i++) {\r\n            this._items_.push(this.generateNewItemObject(this._items_.length, this.generateItemKey(), {}));\r\n        }\r\n\r\n        this.forceUpdate();\r\n    }\r\n\r\n    // when doing many items at a time this is probably quite a bit more efficient\r\n    // than doing single items multiple times.\r\n    itemsDeleteMultipleViaIndex(indexes) {\r\n        this._items_ = this._items_.filter((item, index) => indexes.includes(index));\r\n        this.forceUpdate();\r\n    };\r\n\r\n    // huge efficiency concerns here if you call this in a loop with forceUpdate set to true.\r\n    itemDeleteViaKey(key, forceUpdate = true) {\r\n\r\n        // delete component reference, which in theory, wouldn't have any drawbacks if we didn't.\r\n        if (this.itemComponents[key]) {\r\n            delete this.itemComponents[key];\r\n        }\r\n\r\n        // now delete the item\r\n        this._items_ = this._items_.filter(item => {\r\n            return item.key !== key;\r\n        });\r\n\r\n        // re-index all items\r\n        this.itemsReIndex();\r\n\r\n        if (forceUpdate) {\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    registerTests() {\r\n\r\n        // buttons with callbacks\r\n        this.addTest(\"Dump\", () => {\r\n            console.log(\"Dump\", this);\r\n        });\r\n\r\n        this.addTest(\"Dump Events Tracker\", () => {\r\n            console.log(window.geneQuotes.eventTracker);\r\n        });\r\n\r\n        // this causes render to be trigger many times. react cannot possibly know that for example, after the 4th\r\n        // item, there is one more forceUpdate, so that it needs to wait. This is also not running on a specific\r\n        // react callback, so it can't choose to temporarily queue the force updates until the callback is done, ie on onClick\r\n        // or onChange. The result is that every single forceUpdate results in render() before the next forceUpdate is called.\r\n        this.addTest(\"Interval force update\", () => {\r\n            setInterval(() => {\r\n                console.log(\"Forcing update in interval...\");\r\n                this.forceUpdate();\r\n                console.log('---');\r\n                this.forceUpdate();\r\n                console.log('---');\r\n                this.forceUpdate();\r\n                console.log('---');\r\n                this.forceUpdate();\r\n                console.log('---');\r\n                this.forceUpdate();\r\n            }, 10000);\r\n        });\r\n\r\n        // this results in only one order form render, evidently, because react dispatched this event\r\n        // manually, via the onClick property of a button. In the dispatching of the event it must have\r\n        // stored some global boolean indicating not to allow forceUpdate to run right away, and then\r\n        // after the callback, checked to see if setState or forceUpdate was called.\r\n        this.addTest(\"Many force updates\", () => {\r\n            this.forceUpdate();\r\n            console.log('---');\r\n            this.forceUpdate();\r\n            console.log('---');\r\n            this.forceUpdate();\r\n            console.log('---');\r\n            this.forceUpdate();\r\n            console.log('---');\r\n            this.forceUpdate();\r\n        });\r\n\r\n        // setState actions batched similar to above\r\n        this.addTest(\"multiple setState\", () => {\r\n            let c = 0;\r\n            this.setState({c: c});\r\n            console.log('---');\r\n            c++;\r\n\r\n            this.setState({c: c});\r\n            console.log('---');\r\n            c++;\r\n\r\n            this.setState({c: c});\r\n            console.log('---');\r\n            c++;\r\n        });\r\n\r\n        // works similar to forceUpdate above.. render is called immediately after each setState\r\n        this.addTest(\"multiple setState interval\", () => {\r\n\r\n            let c = 0;\r\n\r\n            setInterval(() => {\r\n\r\n                this.setState({c: c});\r\n                console.log('---');\r\n                c++;\r\n\r\n                this.setState({c: c});\r\n                console.log('---');\r\n                c++;\r\n\r\n                this.setState({c: c});\r\n                console.log('---');\r\n                c++;\r\n\r\n            }, 5000);\r\n\r\n        });\r\n\r\n        this.addTest(\"Outlines\", () => {\r\n            this.addClass = this.addClass ? \"\" : \"test-outlines\";\r\n            this.forceUpdate();\r\n        });\r\n\r\n        this.addTest(\"RenderCount\", () => {\r\n            alert(this.renderCount);\r\n        });\r\n\r\n        this.addTest(\"ShutOffConsoleLog\", () => {\r\n            console.log = function () {\r\n            }\r\n        });\r\n\r\n        this.addTest(\"Toggle Order Summary\", () => {\r\n            this.setState(prev => {\r\n                return {\r\n                    isOrderSummary: !prev.isOrderSummary\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    generateItemKey() {\r\n        // I think its better not to store this in state.\r\n        // changing this alone does not require a re-render, only if/when\r\n        // used to insert an item\r\n        this.lastItemKey++;\r\n        return \"_\" + this.lastItemKey;\r\n    }\r\n\r\n    allItemsChecked() {\r\n        let checked = 0;\r\n        this._items_.forEach(item => checked += item.checked ? 1 : 0);\r\n        return checked === this._items_.length;\r\n    }\r\n\r\n    // silently ignores the case where an item component is not found...\r\n    // which generally shouldn't ever happen.\r\n    itemComponentsForEach(callback) {\r\n\r\n        this._items_.forEach((item, index) => {\r\n\r\n            // comp.props._key === item.key\r\n            // comp.props.index === item.index === index\r\n            let comp = this.getItemComponent(item.key);\r\n            if (comp) {\r\n                callback(comp);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    // todo: bad function name... actually changing the \"state\" of this.items which ends up being the props of each item..., not the state of each of this.items\r\n    itemsMapState(itemCallback) {\r\n        this.setState(prev => {\r\n            // may want to check that the return value is not undefined...\r\n            // todo: i think this is mutating some stuff\r\n            prev.items = prev.items.map(itemCallback);\r\n            return prev;\r\n        });\r\n    }\r\n\r\n    // call after deleting or re-ordering any items, followed by setState or forceUpdate\r\n    itemsReIndex() {\r\n        // re-index remaining items\r\n        this._items_.forEach((item, index) => {\r\n            this._items_[index].index = index;\r\n            // this would do the same thing actually\r\n            // item.index = index;\r\n        });\r\n    }\r\n\r\n    handleEntriesSubmit(e) {\r\n\r\n        e && e.preventDefault();\r\n\r\n        let current = this._items_.length;\r\n        let desired = parseInt(this.entriesUncontrolledInput.current.value || 0);\r\n\r\n        console.log(\"Entries submit...\", current, desired);\r\n\r\n        if (current === desired) {\r\n            // or should we just do nothing.. ?\r\n            alert(\"Your order form already contains \" + current + \" entries.\");\r\n\r\n            // force update anyways, may act as a tool to \"refresh\" possible sync issues\r\n            this.forceUpdate();\r\n\r\n        } else if (current > desired) {\r\n\r\n            let removeCount = current - desired;\r\n            let entries = removeCount === 1 ? \"entry\" : removeCount + \" entries\";\r\n\r\n            if (confirm(\"This action will result in deleting the last \" + entries + \". Do you wish to continue?\")) {\r\n\r\n                // filter items\r\n                this._items_ = this._items_.filter((item, index) => {\r\n\r\n                    if (index >= desired) {\r\n                        if (this.itemComponents[item.key]) {\r\n                            delete this.itemComponents[item.key]\r\n                        }\r\n\r\n                        return false;\r\n                    }\r\n\r\n                    return true;\r\n                });\r\n\r\n                this.itemsReIndex();\r\n                this.forceUpdate();\r\n\r\n            } else {\r\n                console.log(\"confirm cancel....... force update\");\r\n                // reset the \"entries\" box\r\n                this.forceUpdate();\r\n            }\r\n\r\n        } else if (current < desired) {\r\n\r\n            let toAdd = desired - current;\r\n            let entries = toAdd === 1 ? \"1 entry\" : toAdd + \" entries\";\r\n\r\n            this.itemAppend(toAdd);\r\n\r\n            setTimeout(() => {\r\n                alert(entries + \" added.\");\r\n            });\r\n        }\r\n    }\r\n\r\n    // when a user hits \"Go\" with items selected an a bulk action selected\r\n    handleBulkActionSubmit() {\r\n\r\n        switch (this.state.bulk_action) {\r\n            case 'delete_selected':\r\n\r\n                let countChecked = 0;\r\n\r\n                if (confirm(\"All data for the selected items will be permanently lost, are you sure you wish to continue?\")) {\r\n\r\n                    this._items_ = this._items_.filter(item => {\r\n\r\n                        if (item.checked) {\r\n\r\n                            countChecked++;\r\n\r\n                            if (this.itemComponents[item.key]) {\r\n                                delete this.itemComponents[item.key];\r\n                            }\r\n\r\n                            return false;\r\n                        }\r\n\r\n                        return true;\r\n                    });\r\n\r\n                    this.itemsReIndex();\r\n\r\n                    // force eventual update of items and bulk action\r\n                    this.setStateWithForcedNewState({\r\n                        bulk_action: ''\r\n                    });\r\n                }\r\n\r\n                if (!countChecked) {\r\n                    alert(\"No items were selected to be deleted.\");\r\n                }\r\n\r\n                break;\r\n            case 'expand_selected':\r\n\r\n                this._items_.forEach(item => {\r\n                    if (item.checked && this.itemComponents[item.key]) {\r\n                        this.itemComponents[item.key].setState({\r\n                            open: true\r\n                        });\r\n                    }\r\n                });\r\n\r\n                // force eventual update of items and bulk action\r\n                this.setStateWithForcedNewState({\r\n                    bulk_action: ''\r\n                });\r\n\r\n                break;\r\n            case 'collapse_selected':\r\n\r\n                this._items_.forEach(item => {\r\n                    if (item.checked && this.itemComponents[item.key]) {\r\n                        this.itemComponents[item.key].setState({\r\n                            open: false\r\n                        });\r\n                    }\r\n                });\r\n\r\n                // force eventual update of items and bulk action\r\n                this.setStateWithForcedNewState({\r\n                    bulk_action: ''\r\n                });\r\n\r\n                break;\r\n            default:\r\n                alert(\"Invalid (or no) bulk action selected.\");\r\n                break;\r\n        }\r\n    }\r\n\r\n    countChecked() {\r\n        let ret = this._items_.reduce((result, item) => result + (item.checked ? 1 : 0), 0);\r\n        console.log(\"count checked\", ret);\r\n        return ret;\r\n    }\r\n\r\n    // unselect all items and set the action back to default.\r\n    // in general we'll probably do this after processing a bulk action,\r\n    // although there may come a time when we don't want to unselect items after\r\n    // a bulk option has been applied to them.\r\n    resetBulkAction() {\r\n        this.unSelectAllItems();\r\n\r\n        this.setStateWithForcedNewState({\r\n            bulk_action: \"\"\r\n        });\r\n    }\r\n\r\n    // dont need to store the state of this checkbox, instead, it is checked\r\n    // if at least 1 other item is checked\r\n    handleBulkSelectCheckboxChange(e) {\r\n\r\n        if (this._items_.length < 1) {\r\n            return;\r\n        }\r\n\r\n        // the value after the click did its thing\r\n        let isNowChecked = e.target.checked;\r\n\r\n        // let countChecked = this.countChecked();\r\n        // let countItems = this._items_.count;\r\n        // if (countChecked === countItems) {}\r\n        // if (countChecked < 1) {}\r\n\r\n        if (isNowChecked) {\r\n            if (true || confirm(\"Are you sure you want to select all items?\")) {\r\n\r\n                this._items_.forEach((item, index) => {\r\n                    this._items_[index].checked = true;\r\n                });\r\n\r\n                this.forceUpdate();\r\n\r\n            } else {\r\n                e.preventDefault();\r\n            }\r\n        } else {\r\n            if (true || confirm(\"Are you sure you want to de-select all items?\")) {\r\n\r\n                this._items_.forEach((item, index) => {\r\n                    this._items_[index].checked = false;\r\n                });\r\n\r\n                this.forceUpdate();\r\n\r\n            } else {\r\n                e.preventDefault();\r\n            }\r\n        }\r\n    }\r\n\r\n    handleBulkImport(rawData) {\r\n    }\r\n\r\n    // wrap up everything into a formData object (including attachments)\r\n    assembleFormData(appendData = {}) {\r\n\r\n        let formData = new FormData();\r\n\r\n        // ie submit_type = 'calculate_price' or 'checkout'\r\n        for (let key in appendData) {\r\n            if (appendData.hasOwnProperty(key)) {\r\n                formData.append(key, appendData[key]);\r\n            }\r\n        }\r\n\r\n        formData.append('format', this.state.format);\r\n\r\n        this._items_.forEach((item, index) => {\r\n\r\n            // get component instance to access props/state\r\n            let comp = this.getItemComponent(item.key);\r\n\r\n            if (!comp) {\r\n                console.error(\"Component not found for item\", item, this.itemComponents);\r\n                return;\r\n            }\r\n\r\n            // add a few props to state\r\n            let _item = Object.assign({}, comp.state || {}, {\r\n                key: item.key,\r\n                index: index // aka item.index\r\n            });\r\n\r\n            // custom vector file upload (depends on _item.key above)\r\n            if (comp.getField('vector') === 'other') {\r\n\r\n                let input = comp.vectorFile && comp.vectorFile.current;\r\n                let file = input.files && input.files[0];\r\n\r\n                // in case of accidental re-indexing of numerically indexed array,\r\n                // maybe we'll index the files by key instead.\r\n                if (file) {\r\n                    formData.append('vector_files[' + _item.key + ']', file);\r\n                }\r\n            }\r\n\r\n            // append to form data for regular fields, stored in state, using square bracket notation\r\n            // we JSON encode this, but the server side will automatically identify this as a nested array\r\n            for (let key in _item) {\r\n                if (_item.hasOwnProperty(key)) {\r\n                    formData.append('items[' + index + '][' + key + ']', _item[key]);\r\n                }\r\n            }\r\n        });\r\n\r\n        return formData;\r\n    }\r\n\r\n    // send everything to server for validation and maybe price calculation\r\n    sendToServer(submitType, options = {}, appendData = {}) {\r\n\r\n        console.log(\"SendToServer...\", submitType, options, appendData);\r\n\r\n        // probably its always a good idea to do this\r\n        if (options.saveToSession || options.saveToSession === undefined) {\r\n            this.saveSessionState();\r\n        }\r\n\r\n        let savedItemKey;\r\n\r\n        switch (submitType) {\r\n            case 'calculate_price':\r\n                appendData.submit_type = 'calculate_price';\r\n\r\n                // pass in item key when clicking \"save\" on that item. we can choose to\r\n                // not render the order summary if the given item still has errors after\r\n                // all items are validated.\r\n                savedItemKey = options.savedItemKey;\r\n\r\n                break;\r\n            case 'checkout':\r\n                appendData.submit_type = 'checkout';\r\n                break;\r\n            default:\r\n                console.error(\"Invalid submitType\", submitType, options, appendData);\r\n                alert(\"Unknown Error (submit type).\");\r\n                return;\r\n        }\r\n\r\n        appendData.ajax_action = 'order_form_submit';\r\n        let formData = this.assembleFormData(appendData);\r\n\r\n        let config = {\r\n            // cookies ?\r\n            useCredentials: true,\r\n            // for files\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        };\r\n\r\n        console.log(\"Send to server\", formData, config);\r\n\r\n        this.setState({\r\n            subtotal: null,\r\n            serverResponse: {},\r\n            errors: []\r\n        });\r\n\r\n        this.itemComponentsForEach(comp => {\r\n            comp.setState({\r\n                errors: [],\r\n                price: null\r\n            });\r\n        });\r\n\r\n        if (this.isLoading) {\r\n            alert(\"Please wait a second while your current action finishes processing.\");\r\n            return;\r\n        } else {\r\n            this.isLoading = true;\r\n        }\r\n\r\n        axios.post(this.config.ajax_url, formData, config)\r\n            .then(response => {\r\n\r\n                let data = response.data || {};\r\n                console.log(\"Axios Response\", data);\r\n\r\n                let redirect = data.redirect || \"\";\r\n\r\n                if ( redirect ) {\r\n                    window.location = redirect;\r\n                    return;\r\n                }\r\n\r\n                let errors = data.errors || [];\r\n                let item_errors = data.item_errors || {};\r\n                let item_prices = data.item_prices || {};\r\n                let subtotal = data.subtotal || null;\r\n\r\n                // we could choose to not switch back to order summary on a few conditions\r\n                // 1. if a single item was saved but it still has errors\r\n                // 2. if any items have errors\r\n                // 3. if a single item was saved regardless of errors (the user has to hit calculate price again after correcting all errors)\r\n                // might just go with number 3...\r\n                // nevermind, lets do number 1.\r\n                let savedItemExistsAndHasErrors = !!(savedItemKey && item_errors[savedItemKey]);\r\n\r\n                // if the saved item has errors, we could make it open and all other items not, but it shouldn't\r\n                // be necessary, as normally the item saved is the only open item anyways, and if there are\r\n                // other open items, theres no reason to close them.\r\n                this.itemComponentsForEach(comp => {\r\n\r\n                    let thisItemKey = comp.props._key;\r\n\r\n                    let errors = item_errors[thisItemKey] || [];\r\n                    let price = item_prices[thisItemKey] || null;\r\n\r\n                    console.log(\"Errors/Price\", errors, price, comp);\r\n\r\n                    comp.setState({\r\n                        errors: errors,\r\n                        price: price\r\n                    });\r\n                });\r\n\r\n                // if the OrderForm renders before each item component has its state updated,\r\n                // then the receipt can incorrectly determine that no items have errors and\r\n                // render incorrectly.\r\n                // Calling setState on OrderForm after setState on all OrderFormItems *seems*\r\n                // sufficient. However, will put this into a setTimeout just in case it makes any\r\n                // difference at all. I don't know if react will respect the order of setState\r\n                // calls across different components or not.\r\n\r\n                this.isLoading = false;\r\n\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        subtotal: subtotal,\r\n                        serverResponse: response.data || {},\r\n                        errors: errors,\r\n                        isOrderSummary: !savedItemExistsAndHasErrors,\r\n                    });\r\n                });\r\n            })\r\n            .catch(error => {\r\n                alert(\"An unknown error occurred.\");\r\n                console.error(\"Axios Error\", error);\r\n\r\n                this.isLoading = false;\r\n\r\n                this.setState({\r\n                    serverResponse: {\r\n                        serverError: error\r\n                    },\r\n                });\r\n            });\r\n\r\n    }\r\n\r\n    onClickHandleBackToOrderForm(e) {\r\n\r\n        this._items_.forEach((item, index) => {\r\n            this._items_[index].open = true;\r\n            // if a user bothers to check an item thats fine let it stay that way\r\n            // this._items_[index].checked = false;\r\n        });\r\n\r\n        this.setStateWithForcedNewState({\r\n            isOrderSummary: false,\r\n        });\r\n    }\r\n\r\n    itemsHaveErrors() {\r\n        let ret = false;\r\n        this.itemComponentsForEach(comp => {\r\n            if (ret === false) {\r\n                if (comp.state.errors && comp.state.errors.length > 0) {\r\n                    ret = true;\r\n                }\r\n            }\r\n        });\r\n        return ret;\r\n    }\r\n\r\n    toggleBulkImport() {\r\n        this.bulkImportForm.current.setState(prevState => {\r\n            return {\r\n                isOpen: !prevState.isOpen\r\n            }\r\n        });\r\n    }\r\n\r\n    OrderSummarySidebar(props) {\r\n\r\n        if (!this.state.isOrderSummary) {\r\n            return null;\r\n        }\r\n\r\n        let _errors = [];\r\n\r\n        // the server-side can inject errors here, but we may decide to add\r\n        // errors to items only, and not also repeat a global \"you have errors\"\r\n        // message. Therefore, we'll do a default one of those below.\r\n        this.state.errors.forEach(error => {\r\n            _errors.push(error);\r\n        });\r\n\r\n        if (_errors.length < 1 && this.itemsHaveErrors()) {\r\n            _errors.push(\"Please fix all errors before proceeding to checkout.\");\r\n        }\r\n\r\n        let hasErrors = _errors.length > 0;\r\n\r\n        return (\r\n            <div className=\"order-form-sidebar sidebar-order-summary\">\r\n                <div className=\"sidebar-inner\">\r\n                    <p className=\"title\">Order Summary</p>\r\n                    <table className=\"gq-receipt\">\r\n                        <tr>\r\n                            <td>Subtotal</td>\r\n                            <td>{this.state.subtotal ? \"$\" + this.state.subtotal : \"TBD\"}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Tax</td>\r\n                            <td>TBD</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Shipping</td>\r\n                            <td>TBD</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Total</td>\r\n                            <td>TBD</td>\r\n                        </tr>\r\n                    </table>\r\n                    {hasErrors && (\r\n                        <div className=\"checkout-errors\">\r\n                            {_errors.map(error => {\r\n                                return ( <p>{error}</p> )\r\n                            })}\r\n                        </div>\r\n                    )}\r\n                    {!hasErrors && (\r\n                        <div className=\"gq-btn btn-lg btn-orange gq-checkout\">\r\n                            <button onClick={e => {\r\n                                this.sendToServer('checkout');\r\n                            }}>Checkout\r\n                            </button>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n\r\n        // todo: for now this works but we need to store in other cases also.\r\n        console.log(\"Render OrderForm...\");\r\n        this.saveSessionState();\r\n\r\n        // order matters\r\n        let itemsChanged = this.itemsChanged;\r\n        this.itemsChanged = false;\r\n\r\n        // just a test thing\r\n        this.renderCount++;\r\n\r\n        // on render except first render when .current is undefined\r\n        if (this.entriesUncontrolledInput.current) {\r\n            // not sure if this is considered bad practice as render() is having side effects,\r\n            // but side effects to the DOM not react state or components\r\n            this.entriesUncontrolledInput.current.value = this._items_.length || 0;\r\n        }\r\n\r\n        const countChecked = this.countChecked();\r\n\r\n        let cls = \"order-form\";\r\n        cls += this.state.isOrderSummary ? \" is-order-summary has-sidebar\" : \" is-order-form\";\r\n        cls += this.addClass ? \" \" + this.addClass : \"\";\r\n\r\n        console.time(\"OrderForm Render\");\r\n\r\n        const ret = (\r\n            <div className={cls}>\r\n                {this.renderTests()}\r\n                <div className=\"temp-response-data\">\r\n                    <p>Temp response</p>\r\n                    <div>\r\n                        {JSON.stringify(this.state.serverResponse)}\r\n                    </div>\r\n                </div>\r\n                <div className=\"order-form-header\">\r\n                    <div className=\"left\">\r\n                        <h1>{this.state.isOrderSummary ? \"Order Summary\" : \"Gene Quote and Order Form\"}</h1>\r\n                        <p className=\"left\">Trouble with ordering? Contact <a\r\n                            href=\"mail:gene@biobasic.com\">gene@biobasic.com</a></p>\r\n                    </div>\r\n                    <div className=\"calc-price\">\r\n                        {this.state.isOrderSummary && (\r\n                            <div className=\"gq-btn btn-lg btn-blue\">\r\n                                <button\r\n                                    onClick={this.onClickHandleBackToOrderForm}\r\n                                >Back to Order Form\r\n                                </button>\r\n                            </div>\r\n                        )}\r\n                        {!this.state.isOrderSummary && (\r\n                            <div className=\"gq-btn btn-lg btn-teal\">\r\n                                <button onClick={e => this.sendToServer('calculate_price')}>Calculate Price</button>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                <div className=\"order-form-main\">\r\n                    <this.OrderSummarySidebar/>\r\n                    <div className=\"order-form-controls\">\r\n                        <div className=\"flex\">\r\n                            <div className=\"bulk-actions\">\r\n                                <input\r\n                                    title=\"Select or De-select all\"\r\n                                    type=\"checkbox\"\r\n                                    name=\"bulk_select\"\r\n                                    value=\"1\"\r\n                                    checked={countChecked > 0}\r\n                                    onChange={this.handleBulkSelectCheckboxChange}\r\n                                />\r\n                                <select\r\n                                    className={countChecked > 0 ? 'active' : 'not-active'}\r\n                                    title=\"Perform an action on all selected items\"\r\n                                    name=\"bulk_action\"\r\n                                    id=\"bulk_action\"\r\n                                    value={countChecked > 0 ? this.state.bulk_action : \"\"}\r\n                                    disabled={countChecked < 1}\r\n                                    onChange={e => {\r\n                                        this.setState({\r\n                                            bulk_action: e.target.value\r\n                                        });\r\n                                    }}>\r\n                                    <option value=\"\">Action</option>\r\n                                    <option value=\"delete_selected\">Delete {countChecked} Item(s)</option>\r\n                                    {!this.state.isOrderSummary &&\r\n                                    <option value=\"expand_selected\">Expand {countChecked} Item(s)</option>}\r\n                                    {!this.state.isOrderSummary &&\r\n                                    <option value=\"collapse_selected\">Collapse {countChecked} Item(s)</option>}\r\n                                </select>\r\n                                <div className=\"gq-btn bulk-action-btn\"\r\n                                     style={this.state.bulk_action ? {} : {display: 'none'}}>\r\n                                    <button title=\"Proceed with Bulk Action\" onClick={this.handleBulkActionSubmit}>Go\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"number-of-entries\">\r\n                                {this.state.isOrderSummary &&\r\n                                <p className=\"count-genes\">Number of genes: {this._items_.length}</p>}\r\n                                {!this.state.isOrderSummary && <label htmlFor=\"gq_entries\">Number of entries: </label>}\r\n                                {!this.state.isOrderSummary &&\r\n                                <div className=\"input-wrapper\">\r\n                                    <input\r\n                                        className={this._items_.length > 90 ? 'width-lg' : ''}\r\n                                        defaultValue={this._items_.length}\r\n                                        id=\"gq_entries\"\r\n                                        type=\"number\"\r\n                                        name=\"entries\"\r\n                                        min=\"0\"\r\n                                        step=\"1\"\r\n                                        max=\"999\"\r\n                                        onKeyPress={e => {\r\n                                            console.log(\"KeyPress entries...\", e, e.key);\r\n                                            if (e.key === 'Enter') {\r\n                                                // do not pass the event in\r\n                                                this.handleEntriesSubmit();\r\n                                            }\r\n                                        }}\r\n                                        ref={this.entriesUncontrolledInput}\r\n                                    />\r\n                                    <button\r\n                                        className={\"css-reset\"}\r\n                                        onClick={this.handleEntriesSubmit}\r\n                                    >Ok\r\n                                    </button>\r\n                                </div>\r\n                                }\r\n                            </div>\r\n\r\n                            {!this.state.isOrderSummary && (\r\n                                <div className=\"format-select\">\r\n                                    <label htmlFor=\"gq-format\">Format: </label>\r\n                                    <select name=\"format\" id=\"gq-format\" value={this.state.format}\r\n                                            onChange={e => this.setState({format: e.target.value})}>\r\n                                        {window.geneQuotes.renderOptions(window.geneQuotes.getOptionGroup('format'))}\r\n                                    </select>\r\n                                </div>\r\n                            )}\r\n\r\n                            {this.state.isOrderSummary && (\r\n                                <div className=\"format-display\">\r\n                                    <p>Format: {window.geneQuotes.getOptionName('format', this.state.format)}</p>\r\n                                </div>\r\n                            )}\r\n\r\n                            {!this.state.isOrderSummary && (\r\n                                <div className=\"bulk-import\">\r\n                                    <div className=\"gq-btn btn-round btn-orange\">\r\n                                        <button onClick={this.toggleBulkImport}>bulk gene import</button>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    <BulkImportForm\r\n                        ref={this.bulkImportForm}\r\n                        parent={this}\r\n                        isOpenOnMount={false}\r\n                        gene_synthesis_url={this.config.gene_synthesis_template_url}\r\n                        subcloning_url={this.config.subcloning_template_url}\r\n                        mutagenesis_url={this.config.mutagenesis_template_url}\r\n                    />\r\n                    {this._items_.length > 0 && (\r\n                        <this.OrderFormItems items={this._items_ || []} isOrderSummary={this.state.isOrderSummary}\r\n                                             itemsChanged={itemsChanged}/>\r\n                    )}\r\n                    {this._items_.length < 1 && (\r\n                        <div className=\"order-form-items no-results\">\r\n                            <div className=\"no-items\">\r\n                                {!this.state.isOrderSummary && (\r\n                                    <p>Your order form contains no items. <a\r\n                                        href=\"#\"\r\n                                        onClick={e => {\r\n                                            e.preventDefault();\r\n                                            this.itemAppend(1);\r\n                                        }}\r\n                                    >Click here to add one.</a></p>\r\n                                )}\r\n                                {this.state.isOrderSummary && (\r\n                                    <p>Your order form contains no items. <a\r\n                                        href=\"#\"\r\n                                        onClick={e => {\r\n                                            e.preventDefault();\r\n                                            this.setState({\r\n                                                isOrderSummary: false,\r\n                                            });\r\n                                        }}\r\n                                    >Go back to the order form to add one.</a></p>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n\r\n        console.timeEnd(\"OrderForm Render\");\r\n\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport default OrderForm;","import Generic from './Generic';\r\n\r\n/**\r\n *\r\n */\r\nexport default class OrderFormItem extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // give access of this instantiated component to the OrderForm component\r\n        this.props.callbacks.registerViaKey(this.props._key, this);\r\n\r\n        this.setField = this.setField.bind(this);\r\n        this.getField = this.getField.bind(this);\r\n        this.renderOptions = this.renderOptions.bind(this);\r\n        this.getVectorOptionGroupName = this.getVectorOptionGroupName.bind(this);\r\n        this.scrollIntoView = this.scrollIntoView.bind(this);\r\n        this.filterDnaSequence = this.filterDnaSequence.bind(this);\r\n        this.filterProteinSequence = this.filterProteinSequence.bind(this);\r\n        this.InvalidCountFromString = this.InvalidCountFromString.bind(this);\r\n        this.onChangeBasic = this.onChangeBasic.bind(this);\r\n        this.onChangeCheckbox = this.onChangeCheckbox.bind(this);\r\n        this.onClickDeleteSelf = this.onClickDeleteSelf.bind(this);\r\n        this.onClickToggleSelf = this.onClickToggleSelf.bind(this);\r\n        this.onClickClearSelf = this.onClickClearSelf.bind(this);\r\n        this.onClickEditSelf = this.onClickEditSelf.bind(this);\r\n        this.Label = this.Label.bind(this);\r\n        this.Checkbox = this.Checkbox.bind(this);\r\n        this.Input = this.Input.bind(this);\r\n        this.Textarea = this.Textarea.bind(this);\r\n        this.TextareaPlus = this.TextareaPlus.bind(this);\r\n        this.getButton = this.getButton.bind(this);\r\n        this.renderErrors = this.renderErrors.bind(this);\r\n        this.initMemoComponents = this.initMemoComponents.bind(this);\r\n        this.getOptionName = window.geneQuotes.getOptionName.bind(window.geneQuotes);\r\n        this.getOptionGroup = window.geneQuotes.getOptionGroup.bind(window.geneQuotes);\r\n        this.getOptionFirst = window.geneQuotes.getOptionFirst.bind(window.geneQuotes);\r\n        this.optionValueExists = window.geneQuotes.optionValueExists.bind(window.geneQuotes);\r\n\r\n        this.memos = {};\r\n        this.state = this.getInitialState();\r\n\r\n        console.log(\"On construct initial state...\", this.state);\r\n\r\n        this.initMemoComponents();\r\n\r\n        this.test = {\r\n            render: 0,\r\n            didUpdate: 0\r\n        };\r\n\r\n        // setField sets this to true. adds optimization shouldComponentUpdate.\r\n        this.fieldWasSet = false;\r\n\r\n        this.domNode = React.createRef();\r\n        this.vectorFile = React.createRef();\r\n\r\n        this.regex = {};\r\n        this.regex.whiteSpace = /[\\s]{1,}/;\r\n        this.regex.stopAndAfter = /[s][t][o][p][\\s\\S]{0,}/gi;\r\n        this.regex.notACGT = /[^ACGT]/gi;\r\n        this.regex.notValidProteinSequence = /[^ARNDCEQGHILKMFPSTWYV*-]/gi;\r\n\r\n        // this has some annoying line break issues unfortunately.\r\n        // if changing this, you may need to check server side code which repeats this value.\r\n        this.invalidReplacementCharacter = '';\r\n\r\n        // gives \"this\" addTest and renderTests methods.\r\n        Generic.provideTests(this);\r\n\r\n        this.addTest(\"Set Many Fields\", () => {\r\n            this.setField('testField1', 'testValue1');\r\n            this.setField('testField1', 'testValue1a');\r\n            this.setField('testField1', 'testValue1b');\r\n            this.setField('testField2', 'testValue2');\r\n            this.setField('testField3', 'testValue3');\r\n            this.setField('testField4', 'testValue4');\r\n        });\r\n\r\n        this.addTest(\"Dump\", () => {\r\n            console.log(\"Dump\", this);\r\n        });\r\n\r\n        this.addTest(\"Update\", () => {\r\n            this.forceUpdate();\r\n        });\r\n\r\n        this.addTest(\"Random State\", () => {\r\n            this.setState({\r\n                random: Math.random()\r\n            });\r\n        });\r\n\r\n        this.addTest(\"Change Test Input State\", () => {\r\n            this.setState({testInput: Math.random()});\r\n        });\r\n\r\n        this.addTest(\"Redundant State\", () => {\r\n            this.setState({});\r\n        });\r\n    }\r\n\r\n    // init memo components using arrow functions so that they still have\r\n    // access to \"this\" without being provided it in props.\r\n    // this also means that if we un-memo some components, we shouldn't\r\n    // have to change much or anything at all in the render body.\r\n    //\r\n    // Breaking each order form item into something like 10 memo components\r\n    // was not desirable, but was a necessary performance optimization.\r\n\r\n    // In most cases, we ignore props passed into the components, and reference \"this\"\r\n    // directly instead, which is in a way, breaking the rules, but unfortunately, I see\r\n    // no other reasonable way. It would be enormously repetitive to pass in every single\r\n    // prop directly in props and achieve literally nothing. Instead, we manually declare\r\n    // the dependencies in props.dependency_{int}, when those props change, the component\r\n    // will re-render.\r\n    initMemoComponents() {\r\n\r\n        this.memos.ItemHeader = React.memo(props => {\r\n            return (\r\n                <div className=\"item-header\">\r\n                    <div className=\"item-header-left\">\r\n                        {this.Checkbox({\r\n                            name: 'checked',\r\n                            value: '1',\r\n                            checked: this.props.checked,\r\n                            onChange: (e) => {\r\n                                this.props.callbacks.setChecked(this.props.index, e.target.checked);\r\n                            }\r\n                        })}\r\n                        {!this.props.isOrderSummary && (\r\n                            <div className=\"name\">\r\n                                <this.Label name=\"gene_name\">{this.props.index + 1}.</this.Label>\r\n                                <this.Input name=\"gene_name\" title=\"Gene Name\" placeholder=\"Gene Name\"/>\r\n                            </div>\r\n                        )}\r\n                        {this.props.isOrderSummary && (\r\n                            <p className=\"name-static\">\r\n                                <span className=\"number\">{this.props.index + 1}. </span>\r\n                                <span className=\"value\">{this.getField('gene_name') || \"____________\"}</span>\r\n                            </p>\r\n                        )}\r\n                        {this.props.isOrderSummary && (\r\n                            <p className=\"price\">\r\n                                <span className=\"price-label\">Price: </span>\r\n                                <span className=\"price-value\">{this.state.price ? \"$\" + this.state.price : \"TBD\"}</span>\r\n                            </p>\r\n                        )}\r\n                        {!this.props.isOrderSummary && this.state.errors.length > 0 && (\r\n                            <p className=\"errors-notice\">{this.state.errors.length} Errors Found</p>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"item-header-right\">\r\n                        {!this.props.isOrderSummary && (\r\n                            <button title=\"Toggle\"\r\n                                    className={\"css-reset control control-collapse\" + (this.getField('open') && ' rotated')}\r\n                                    onClick={this.onClickToggleSelf}>\r\n                                <img src=\"./assets/fa-png/chevron-down.png\" alt=\"\"/>\r\n                            </button>\r\n                        )}\r\n                        {!this.props.isOrderSummary && (\r\n                            <button title=\"Reset\" className=\"css-reset control control-clear\"\r\n                                    onClick={this.onClickClearSelf}>\r\n                                <img src=\"./assets/fa-png/eraser.png\" alt=\"\"/>\r\n                            </button>\r\n                        )}\r\n                        {this.props.isOrderSummary && (\r\n                            <button title=\"Edit\" className=\"css-reset control control-edit\"\r\n                                    onClick={this.onClickEditSelf}>\r\n                                <img src=\"./assets/fa-png/edit.png\" alt=\"\"/>\r\n                            </button>\r\n                        )}\r\n                        <button title=\"Delete\" className=\"css-reset control control-delete\"\r\n                                onClick={this.onClickDeleteSelf}>\r\n                            <img src=\"./assets/fa-png/trash-o.png\" alt=\"\"/>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        this.memos.SequenceAndServiceTypeWrapper = React.memo(props => {\r\n            return (\r\n                <>\r\n                <div className=\"wrapper sequence-type\">\r\n                    <p className=\"label\">Sequence Type</p>\r\n                    <div className=\"options\">\r\n                        {this.getButton('sequence_type', 'dna', this.getOptionName('sequence_type', 'dna'))}\r\n                        {this.getButton('sequence_type', 'protein', this.getOptionName('sequence_type', 'protein'), this.getField('service_type') !== 'gene_synthesis')}\r\n                    </div>\r\n                </div>\r\n                <div className=\"wrapper service-type\">\r\n                    <p className=\"label\">Service Type</p>\r\n                    <div className=\"options\">\r\n                        {this.getButton('service_type', 'gene_synthesis', this.getOptionName('service_type', 'gene_synthesis'))}\r\n                        {this.getButton('service_type', 'subcloning', this.getOptionName('service_type', 'subcloning'))}\r\n                        {this.getButton('service_type', 'mutagenesis', this.getOptionName('service_type', 'mutagenesis'))}\r\n                    </div>\r\n                </div>\r\n                </>\r\n            );\r\n        });\r\n\r\n        this.memos.GeneSynthesisDnaWrapper = React.memo(props => {\r\n\r\n            return (\r\n                <div className=\"wrapper sequence service-type-gene-synthesis sequence-type-dna\">\r\n                    <this.TextareaPlus\r\n                        doInvalid={true}\r\n                        doLength={true}\r\n                        lengthLabel=\"Length (DNA bases):\"\r\n                        name=\"dna_sequence\"\r\n                        label={(<strong>Sequence</strong>)}\r\n                    />\r\n                </div>\r\n            );\r\n        });\r\n\r\n        this.memos.GeneSynthesisProteinWrapper = React.memo(props => {\r\n\r\n            return (\r\n                <div className=\"wrapper sequence svt-gene-synthesis sqt-protein\">\r\n                    <div className=\"sub-wrapper optional-5\">\r\n                        <label htmlFor={this.getHtmlId('protein_5_flanking_sequence')}>optional - 5\"\r\n                            Flanking\r\n                            sequence: </label>\r\n                        <this.Input name=\"protein_5_flanking_sequence\"/>\r\n                        {this.state.open && this.InvalidCountFromString(this.getField('protein_5_flanking_sequence'))}\r\n                    </div>\r\n\r\n                    <this.TextareaPlus\r\n                        doInvalid={true}\r\n                        doLength={false}\r\n                        name=\"protein_sequence\"\r\n                        title=\"Enter protein sequence here\"\r\n                        placeholder=\"Enter protein sequence here\"\r\n                    />\r\n                    <div className=\"sub-wrapper optional-3\">\r\n                        <label htmlFor={this.getHtmlId('protein_3_flanking_sequence')}>optional - 3\"\r\n                            Flanking\r\n                            sequence: </label>\r\n                        <this.Input name=\"protein_3_flanking_sequence\"/>\r\n                        {this.InvalidCountFromString(this.getField('protein_3_flanking_sequence'))}\r\n                        <div className=\"length\">\r\n                            Length (DNA bases):{` `}\r\n                            <strong>{this.state.open && this.getProteinTotalLength()}</strong>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        this.memos.SubcloningSequenceTargetGene = React.memo(props => {\r\n            return (\r\n                <this.TextareaPlus\r\n                    doInvalid={true}\r\n                    doLength={true}\r\n                    name=\"subcloning_sequence_target_gene\"\r\n                    label={(\r\n                        <><strong className='td-underline'>Target Gene Sequence</strong> (gene of\r\n                        interest\r\n                        only\r\n                        -\r\n                        without plasmid)</>\r\n                    )}\r\n                />\r\n            );\r\n        });\r\n\r\n        this.memos.SubcloningSequenceSourcePlasmid = React.memo(props => {\r\n            return (\r\n                <this.TextareaPlus\r\n                    doInvalid={true}\r\n                    doLength={true}\r\n                    name=\"subcloning_sequence_source_plasmid\"\r\n                    label={(\r\n                        <><strong className='td-underline'>Source</strong> <strong>Plasmid</strong> (or\r\n                        DNA\r\n                        fragment) <strong>+ Target Gene Sequence</strong></>\r\n                    )}\r\n                />\r\n            );\r\n        });\r\n\r\n        this.memos.SubcloningSequenceFinalPlasmid = React.memo(props => {\r\n            return (\r\n                <this.TextareaPlus\r\n                    doInvalid={true}\r\n                    doLength={true}\r\n                    name=\"subcloning_sequence_final_plasmid\"\r\n                    label={(\r\n                        <><strong className=\"td-underline\">Final</strong> <strong>Plasmid + Target Gene\r\n                            Sequence</strong> (sequence of target gene in final plasmid)</>\r\n                    )}\r\n                />\r\n            );\r\n        });\r\n\r\n\r\n        this.memos.MutagenesisSequenceFinal = React.memo(props => {\r\n\r\n            return (\r\n                <this.TextareaPlus\r\n                    doInvalid={true}\r\n                    doLength={true}\r\n                    name=\"mutagenesis_sequence_final\"\r\n                    label={(\r\n                        <>\r\n                        <strong className=\"td-underline\">Final</strong> <strong>Mutant\r\n                            Sequence</strong> (including\r\n                        plasmid if applicable)\r\n                        </>\r\n                    )}\r\n                />\r\n            );\r\n        });\r\n\r\n        this.memos.MutagenesisSequenceTemplate = React.memo(props => {\r\n\r\n            return (\r\n                <this.TextareaPlus\r\n                    doInvalid={true}\r\n                    doLength={true}\r\n                    name=\"mutagenesis_sequence_template\"\r\n                    label={(\r\n                        <>\r\n                        <strong className=\"td-underline\">Template</strong> <strong>Sequence\r\n                            (WT)</strong>\r\n                        </>\r\n                    )}\r\n                />\r\n            );\r\n        });\r\n\r\n        // may be more expensive than it looks due to getting <select> options\r\n        this.memos.MutationsSubWrapper = React.memo(props => {\r\n\r\n            let active = this.getField('service_type') === 'mutagenesis';\r\n\r\n            return (\r\n                <div className=\"sub-wrapper mutations\"\r\n                     title={active ? '' : 'For Mutagenesis Only'}>\r\n                    <label htmlFor={this.getHtmlId('mutations')}>Number of Mutations (or\r\n                        deletions)</label>\r\n                    <select name=\"mutations\" value={this.getField('mutations') || \"\"} onChange={this.onChangeBasic}\r\n                            disabled={active ? \"\" : \"disabled\"}>\r\n                        {this.renderOptions('mutations')}\r\n                    </select>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        this.memos.DeliveryTypeWrapper = React.memo(props => {\r\n\r\n            return (\r\n                <div className=\"wrapper delivery-type\">\r\n                    <label>Delivery Type</label>\r\n                    {this.Checkbox({\r\n                        name: \"delivery_lyophilized\",\r\n                        wrapperProps: {\r\n                            title: \"This delivery type is required.\"\r\n                        },\r\n                        id: this.getHtmlId('delivery_lyophilized'),\r\n                        checked: true,\r\n                        disabled: true,\r\n                        label: this.getOptionName('delivery_type', 'delivery_lyophilized'),\r\n                        onChange: this.onChangeCheckbox,\r\n                    })}\r\n                    {this.Checkbox({\r\n                        name: \"delivery_glycerol\",\r\n                        id: this.getHtmlId('delivery_glycerol'),\r\n                        checked: this.getField('delivery_glycerol') === \"1\",\r\n                        label: this.getOptionName('delivery_type', 'delivery_glycerol'),\r\n                        onChange: (e => {\r\n                            if (e.target.checked) {\r\n                                this.setField('delivery_buffer', false);\r\n                                this.setField('delivery_glycerol', \"1\");\r\n                            } else {\r\n                                this.setField('delivery_glycerol', false);\r\n                            }\r\n                        }),\r\n                    })}\r\n                    {this.Checkbox({\r\n                        name: \"delivery_buffer\",\r\n                        id: this.getHtmlId('delivery_buffer'),\r\n                        checked: this.getField('delivery_buffer') === \"1\",\r\n                        label: this.getOptionName('delivery_type', 'delivery_buffer'),\r\n                        value: \"1\",\r\n                        onChange: (e => {\r\n                            if (e.target.checked) {\r\n                                this.setField('delivery_glycerol', false);\r\n                                this.setField('delivery_buffer', \"1\");\r\n                            } else {\r\n                                this.setField('delivery_buffer', false);\r\n                            }\r\n                        }),\r\n                    })}\r\n                </div>\r\n            );\r\n        });\r\n\r\n        this.memos.DeliverySubWrapper = React.memo(props => {\r\n            return (\r\n                <div className=\"sub-wrapper delivery-amount\">\r\n                    <label htmlFor={this.getHtmlId('delivery_amount')}>Delivery Amount</label>\r\n                    <select name=\"delivery_amount\" value={this.getField('delivery_amount') || \"\"}\r\n                            onChange={this.onChangeBasic}>\r\n                        {this.renderOptions('delivery_amount')}\r\n                    </select>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        this.memos.KozakSequenceWrapper = React.memo(props => {\r\n\r\n            let allow_optimize_and_kozak = props.allow_optimize_and_kozak;\r\n\r\n            return (\r\n                <div\r\n                    className={\"wrapper inline add-kozak-sequence\" + ( allow_optimize_and_kozak ? \"\" : \" disabled\")}\r\n                    title={allow_optimize_and_kozak ? \"\" : \"Does not apply when service type is Mutagenesis\"}>\r\n                    <div className=\"sub-wrapper\">\r\n                        <p className=\"label\">Add Kozak Sequence?</p>\r\n                        <div className=\"options\">\r\n                            {this.Checkbox({\r\n                                label: 'Yes',\r\n                                name: 'add_kozak_sequence',\r\n                                checked: allow_optimize_and_kozak && this.getField('add_kozak_sequence') === 'yes',\r\n                                disabled: allow_optimize_and_kozak === false,\r\n                                value: 'yes',\r\n                            })}\r\n                            {this.Checkbox({\r\n                                label: 'No',\r\n                                name: 'add_kozak_sequence',\r\n                                checked: allow_optimize_and_kozak === false || this.getField('add_kozak_sequence') === 'no',\r\n                                disabled: allow_optimize_and_kozak === false,\r\n                                value: 'no',\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"sub-wrapper\">\r\n                        <label htmlFor={this.getHtmlId('kozak_sequence')}>If Yes, Sequence?</label>\r\n                        <this.Input\r\n                            name=\"kozak_sequence\"\r\n                            value={allow_optimize_and_kozak ? this.getField(\"kozak_sequence\") : \"\"}\r\n                            placeholder=\"Enter Kozak Sequence\"\r\n                            disabled={allow_optimize_and_kozak === false || this.getField('add_kozak_sequence') !== 'yes'}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        this.memos.OptimizeSequenceWrapper = React.memo(props => {\r\n\r\n            let allow_optimize_and_kozak = props.allow_optimize_and_kozak;\r\n\r\n            return (\r\n                <div\r\n                    className={\"wrapper inline optimize-sequence\" + ( allow_optimize_and_kozak ? \"\" : \" disabled\")}\r\n                    title={allow_optimize_and_kozak ? \"\" : \"Does not apply when service type is Mutagenesis\"}>\r\n                    <div className=\"sub-wrapper\">\r\n                        <p className=\"label\">Optimize Sequence?</p>\r\n                        <div className=\"options\">\r\n                            {this.Checkbox({\r\n                                label: 'Yes',\r\n                                name: 'optimize_sequence',\r\n                                checked: allow_optimize_and_kozak && this.getField('optimize_sequence') === 'yes',\r\n                                disabled: allow_optimize_and_kozak === false,\r\n                                value: 'yes',\r\n                            })}\r\n                            {this.Checkbox({\r\n                                label: 'No',\r\n                                name: 'optimize_sequence',\r\n                                checked: allow_optimize_and_kozak === false || this.getField('optimize_sequence') === 'no',\r\n                                disabled: allow_optimize_and_kozak === false,\r\n                                value: 'no',\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"sub-wrapper for-expression-system\">\r\n                        <label htmlFor={this.getHtmlId('expression_system')}>If Yes, Expression System?</label>\r\n                        <this.Input\r\n                            name=\"expression_system\"\r\n                            value={allow_optimize_and_kozak ? this.getField(\"expression_system\") : \"\"}\r\n                            placeholder=\"Enter Intended Expression System\"\r\n                            disabled={allow_optimize_and_kozak === false || this.getField('optimize_sequence') !== 'yes'}\r\n                        />\r\n                    </div>\r\n                    <div className=\"sub-wrapper for-restriction-sites\">\r\n                        <label htmlFor={this.getHtmlId('restriction_sites')}>If Yes, Restriction Sites to avoid\r\n                            /\r\n                            maintain?</label>\r\n                        <this.Input\r\n                            name=\"restriction_sites\"\r\n                            value={allow_optimize_and_kozak ? this.getField(\"restriction_sites\") : \"\"}\r\n                            placeholder=\"Enter restriction sites to avoid / maintain\"\r\n                            disabled={allow_optimize_and_kozak === false || this.getField('optimize_sequence') !== 'yes'}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        // may be more expensive than it looks due to getting 90+ <select> options\r\n        this.memos.VectorWrapper = React.memo(props => {\r\n\r\n            console.log(\"VectorWrapper Render...\", props);\r\n\r\n            let vector = this.getField('vector');\r\n            let vector_other = vector === 'other';\r\n\r\n            // note: keep the file upload in the DOM when vector is not 'other'\r\n            return (\r\n                <div className=\"wrapper vector\">\r\n                    <div className=\"sub-wrapper vector-select\">\r\n                        <label htmlFor={this.getHtmlId('vector')}>Vector</label>\r\n                        <select name=\"vector\" value={vector || \"\"} onChange={this.onChangeBasic}>\r\n                            {this.renderOptions(this.getVectorOptionGroupName(), \"Choose a Vector\")}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"sub-wrapper vector-custom\" style={vector_other ? {} : {display: \"none\"}}>\r\n                        {vector_other && (\r\n                            <>\r\n                            <p className=\"msg\"><em>Select vector above or enter vector details and attach\r\n                                vector\r\n                                sequence if not listed.</em></p>\r\n                            <div className=\"text-items\">\r\n                                <div className=\"item\">\r\n                                    <this.Input name=\"vector_name\" placeholder=\"Vector Name\"\r\n                                                title=\"Vector Name\"/>\r\n                                </div>\r\n                                <div className=\"item\">\r\n                                    <this.Input name=\"vector_antibiotic_resistance\"\r\n                                                placeholder=\"Antibiotic Resistance\"\r\n                                                title=\"Antibiotic Resistance\"/>\r\n                                </div>\r\n                                <div className=\"item\">\r\n                                    <this.Input name=\"vector_growth_conditions\"\r\n                                                placeholder=\"Growth Conditions\"\r\n                                                title=\"Growth Conditions\"/>\r\n                                </div>\r\n                            </div>\r\n                            </>\r\n                        )}\r\n                        <div className=\"file-item\">\r\n                            <input\r\n                                type=\"file\"\r\n                                name=\"vector_file\"\r\n                                placeholder=\"Attach Vector\"\r\n                                title=\"Attach Vector\"\r\n                                ref={this.vectorFile}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        this.memos.CloningSites = React.memo(props => {\r\n\r\n            console.log(\"cloning sites render...\", props);\r\n\r\n            return (\r\n                <div className=\"wrapper cloning-sites\">\r\n                    <p className=\"label\">Cloning sites / method</p>\r\n                    <table className=\"sub-wrapper cloning-sites-table\">\r\n                        <tbody>\r\n                        <tr>\r\n                            <td><label htmlFor={this.getHtmlId('cloning_sites_5')}>5' Restriction\r\n                                Site</label>\r\n                            </td>\r\n                            <td>\r\n                                <this.Input name=\"cloning_sites_5\" placeholder=\"default is blunt-end\"/>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <label htmlFor={this.getHtmlId('cloning_sites_3')}>3' Restriction\r\n                                    Site</label>\r\n                            </td>\r\n                            <td>\r\n                                <this.Input name=\"cloning_sites_3\" placeholder=\"default is blunt-end\"/>\r\n                            </td>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        // this is probably far to small to have any benefit from using memo,\r\n        // but it's here, so i'm not going to move it. Pass in a hardcoded\r\n        // value into props, so that it never changes, and only renders once.\r\n        // I believe that when passing in no props, re-render will occur always.\r\n        // alternatively, we could specify the 2nd parameter of React.memo, which\r\n        // would be a function which always returns true.\r\n        this.memos.addItemButtonWrapper = React.memo(props => {\r\n\r\n            // todo: insertion should go after the clicked item not at the end of the list.\r\n            return (\r\n                <div className=\"wrapper add-another\">\r\n                    <div className=\"gq-btn color-orange\">\r\n                        <button onClick={this.props.callbacks.insert}>Add Another</button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        });\r\n    }\r\n\r\n    // very necessary performance optimization. Part of this comes from the fact that\r\n    // some values used in the render function of the component are passed down from the parent.\r\n    // therefore when we do things like, set one component to have a status (prop) of checked,\r\n    // the entire parent has to re-render, which includes re-rendering all components. This is\r\n    // very expensive in general, but we achieve very significant performance boosts by instead\r\n    // just comparing props and state and then possibly doing nothing. Therefore, with 50 form\r\n    // items, when we check one box, we'll re-render one item, and run this function on the other\r\n    // 49 items. Still a pretty absurd amount of work just to check a box, but again, much better than\r\n    // before. In the specific case of checking the boxes, we could use uncontrolled inputs which\r\n    // would solve this one issue, but there are many other times when the entire order form\r\n    // has to re-render.\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n\r\n        // this is an optimization. If a field was set either with setField or with setState,\r\n        // then eventually, we will figure that out and return true. But, if we used setField,\r\n        // then we can return true immediately, without having to compare all props and state.\r\n        if (this.fieldWasSet) {\r\n            return true;\r\n        }\r\n\r\n        // nope, react actually doesn't expose this code to us and forces us to write our own\r\n        // let ret = React.PureComponent.prototype.shouldComponentUpdate.call(this, nextProps, nextState );\r\n\r\n        // most state changes will affect fieldWasSet, therefore, it may\r\n        // be a tiny bt more efficient to compare props first, even though props do contain a lot of callback functions.\r\n        if (!Generic.shallowCompare(nextProps, this.props)) {\r\n            return true;\r\n        }\r\n\r\n        // now compare state...\r\n        if (!Generic.shallowCompare(nextState, this.state)) {\r\n            return true;\r\n        }\r\n\r\n        // lastly, errors are nested in state, so its important that we account for this here,\r\n        // otherwise, adjusting errors will not result in updating the component\r\n        if (!Generic.shallowCompare(nextState.errors, this.state.errors)) {\r\n            return true;\r\n        }\r\n\r\n        // trying to see if/when we did all the work above when changing state in OrderForm\r\n        // a.k.a why are react keys not working as I thought they would?\r\n        console.log(\"Component should not update...\");\r\n        return false;\r\n    }\r\n\r\n    // kind of cheating and using this as \"get derived state from state\", so that in some cases\r\n    // we can blindly set state to something invalid, and this should sort of validate it.\r\n    // the downside is that this method is static so we wont have access to some methods.\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        // object for updates to state\r\n        let updates = {};\r\n\r\n        let sq = state.sequence_type;\r\n        let sv = state.service_type;\r\n\r\n        // protein is only for gene synthesis\r\n        if (sq === 'protein' && (sv === 'subcloning' || sv === 'mutagenesis')) {\r\n            updates.sequence_type = 'dna';\r\n        }\r\n\r\n        // mutagenesis cannot select these custom options\r\n        // in addition we may choose to hide the value of any input into the text boxes in render()\r\n        if (sv === 'mutagenesis') {\r\n            updates.optimize_sequence = 'no';\r\n            updates.add_kozak_sequence = 'no';\r\n        }\r\n\r\n        // checking one box will uncheck the other but this only occurs with user interaction\r\n        if (state.delivery_buffer && state.delivery_glycerol) {\r\n            updates.delivery_glycerol = false;\r\n            updates.delivery_buffer = false;\r\n        }\r\n\r\n        // strictly null to not update the state\r\n        return updates || null;\r\n    }\r\n\r\n    // references global config and returns <options>'s\r\n    renderOptions(groupName, placeholder) {\r\n        return window.geneQuotes.renderOptions(this.getOptionGroup(groupName), placeholder);\r\n    }\r\n\r\n    // gets the option group name used to populate vector dropdown list with options, which\r\n    // change based on service type. the values below must correspond to values used\r\n    // in the server-side config.\r\n    getVectorOptionGroupName(service_type = null) {\r\n\r\n        if (service_type === null) {\r\n            service_type = this.getField('service_type');\r\n        }\r\n\r\n        switch (service_type) {\r\n            case 'gene_synthesis':\r\n                return 'vector_gene_synthesis';\r\n            case 'subcloning':\r\n                return 'vector_subcloning';\r\n            case 'mutagenesis':\r\n                return 'vector_mutagenesis';\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    // jQueryTextAreaHighlight() {\r\n    //     let test = $('#' + this.getHtmlId('protein_sequence'));\r\n    //     if (test.length > 0) {\r\n    //         test.highlightWithinTextarea({\r\n    //             highlight: [\r\n    //                 'stop',\r\n    //             ]\r\n    //         });\r\n    //     }\r\n    // }\r\n\r\n    componentDidMount() {\r\n\r\n        // this.jQueryTextAreaHighlight.apply(this);\r\n\r\n        // for bulk import possibly\r\n        if (this.props.onMount) {\r\n            this.props.onMount(this);\r\n        }\r\n\r\n        // might be better to use this for bulk import ?\r\n        if (this.props.initialState) {\r\n            this.setState(this.props.initialState);\r\n        }\r\n    }\r\n\r\n    // need function not a variable so we can return to initial state on clear.\r\n    // a variable may get mutated..\r\n    getInitialState() {\r\n\r\n        let initialServiceType = 'gene_synthesis';\r\n\r\n        return {\r\n            open: true,\r\n            sequence_type: 'protein',\r\n            service_type: initialServiceType,\r\n            optimize_sequence: 'no',\r\n            add_kozak_sequence: 'no',\r\n            delivery_lyophilized: true,\r\n            errors: [],\r\n            price: null,\r\n            vector: this.getOptionFirst(this.getVectorOptionGroupName(initialServiceType)),\r\n            mutations: this.getOptionFirst('mutations'),\r\n            delivery_amount: this.getOptionFirst('delivery_amount'),\r\n            protein_sequence: \"\",\r\n        }\r\n    }\r\n\r\n    resetState() {\r\n\r\n        this.setState((prevState) => {\r\n\r\n            let newState = {};\r\n\r\n            // can't simply omit the keys we want to removed. setState will never remove anything,\r\n            // instead, we have to provide them with a value of undefined.\r\n            Object.keys(prevState).map((key) => {\r\n                newState[key] = undefined;\r\n            });\r\n\r\n\r\n            newState = Object.assign({}, newState, this.getInitialState());\r\n\r\n            console.log(\"Reset...\", newState);\r\n\r\n            // object containing all keys in current and initial state\r\n            return newState;\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n\r\n        // re-validate vector options if service type changed\r\n        if (prevState.service_type !== this.state.service_type) {\r\n\r\n            // console.log(\"Check vectors...\", prevState.service_type, this.state.service_type);\r\n\r\n            // most likely different service types will have the same vector options\r\n            if (!this.optionValueExists(this.getVectorOptionGroupName(), this.state.vector)) {\r\n                // console.log(\"Vector option not valid\", this.state.vector, this.getOptionGroup(this.getVectorOptionGroupName()));\r\n                this.setState({\r\n                    vector: this.getOptionFirst(this.getVectorOptionGroupName())\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    getField(name, fromState) {\r\n        // allow fromState to be {} although I don't anticipate ever needing this.\r\n        return fromState !== undefined ? fromState[name] : this.state[name];\r\n    }\r\n\r\n    filterProteinSequence(sequence) {\r\n\r\n        if (!sequence) {\r\n            return '';\r\n        }\r\n\r\n        // order is pretty important\r\n        sequence = sequence.replace(this.regex.whiteSpace, \"\", sequence);\r\n        sequence = sequence.replace(this.regex.stopAndAfter, \"\", sequence);\r\n        sequence = sequence.replace(this.regex.notValidProteinSequence, this.invalidReplacementCharacter, sequence);\r\n        return sequence;\r\n    }\r\n\r\n    filterDnaSequence(sequence) {\r\n\r\n        if (!sequence) {\r\n            return '';\r\n        }\r\n\r\n        // order is pretty important\r\n        sequence = sequence.replace(this.regex.whiteSpace, \"\", sequence);\r\n\r\n        // I think that only protein sequences are likely to contain the word stop.\r\n        // todo: confirm what to do about 'stop' here\r\n        // sequence = sequence.replace( this.regex.stopAndAfter, \"\", sequence );\r\n\r\n        sequence = sequence.replace(this.regex.notACGT, this.invalidReplacementCharacter, sequence);\r\n        return sequence;\r\n    }\r\n\r\n    getStrlen(str, filterInvalid = false) {\r\n\r\n        if (!str) {\r\n            return 0;\r\n        }\r\n\r\n        if (filterInvalid && str.length > 0) {\r\n            str = str.replace(new RegExp(\"[\" + this.invalidReplacementCharacter + \"]\", 'gi'), \"\", str);\r\n        }\r\n        // console.log('getStrlen', value, str, filterInvalid, str.length );\r\n        return str.length;\r\n    }\r\n\r\n    // checks 3 fields to compute total length with special rules\r\n    getProteinTotalLength() {\r\n        let len = 0;\r\n        // todo: depending on rules for \"stop\" we may need to re-ensure this calculation is correct.\r\n        // ...for example, if we somehow accomplish the miracle of adding spans around invalid characters\r\n        // rather than using a single invalid character replacement.\r\n        len += this.getStrlen(this.getField('protein_5_flanking_sequence'), true);\r\n        len += this.getStrlen(this.getField('protein_3_flanking_sequence'), true);\r\n        len += 3 * this.getStrlen(this.getField('protein_sequence'), true);\r\n        return len;\r\n    }\r\n\r\n    // callback not optional\r\n    filterField(name, value, then) {\r\n\r\n        then = then || ((v) => {\r\n            return v;\r\n        });\r\n\r\n        switch (name) {\r\n            case 'protein_sequence':\r\n                return then(this.filterProteinSequence(value));\r\n                break;\r\n            case 'dna_sequence':\r\n            case 'protein_5_flanking_sequence':\r\n            case 'protein_3_flanking_sequence':\r\n            case 'subcloning_sequence_target_gene':\r\n            case 'subcloning_sequence_source_plasmid':\r\n            case 'subcloning_sequence_final_plasmid':\r\n            case 'mutagenesis_sequence_template':\r\n            case 'mutagenesis_sequence_final':\r\n                return then(this.filterDnaSequence(value));\r\n                break;\r\n            default:\r\n                return then(value);\r\n        }\r\n    };\r\n\r\n    setField(name, value) {\r\n\r\n        this.fieldWasSet = true;\r\n\r\n        this.filterField(name, value, filteredValue => {\r\n            this.setState({\r\n                [name]: filteredValue\r\n            });\r\n        });\r\n    }\r\n\r\n    onChangeCheckbox(e) {\r\n        this.setField(e.target.name, e.target.checked ? e.target.value : false);\r\n    };\r\n\r\n    onChangeBasic(e) {\r\n        this.setField(e.target.name, e.target.value);\r\n    };\r\n\r\n    // undefined default value will not clear inputs after resetting the form...\r\n    getNameAndValue(name, defaultValue) {\r\n        defaultValue = defaultValue === undefined ? \"\" : defaultValue;\r\n        return {\r\n            name: name,\r\n            value: this.getField(name) || defaultValue\r\n        }\r\n    };\r\n\r\n    getHtmlId(name) {\r\n        return name + \"\" + this.props._key;\r\n    };\r\n\r\n    onClickDeleteSelf(e) {\r\n\r\n        // prevent possible form submission\r\n        if (e) {\r\n            e.preventDefault();\r\n        }\r\n\r\n        if (confirm(\"Are you sure you want to delete this entry?\")) {\r\n            this.props.callbacks.deleteViaKey(this.props._key);\r\n        }\r\n    };\r\n\r\n    onClickEditSelf(e) {\r\n\r\n        e && e.preventDefault();\r\n\r\n        // tell the parent to handle editing this item\r\n        this.props.callbacks.editViaKey(this.props._key);\r\n    };\r\n\r\n    onClickClearSelf(e) {\r\n\r\n        // prevent possible form submission\r\n        if (e) {\r\n            e.preventDefault();\r\n        }\r\n\r\n        if (confirm(\"Are you sure you want to reset this entry?\")) {\r\n            this.resetState();\r\n        }\r\n    };\r\n\r\n    onClickToggleSelf(e) {\r\n\r\n        // prevent possible form submission\r\n        if (e) {\r\n            e.preventDefault();\r\n        }\r\n\r\n        this.setState((prev) => {\r\n            return {\r\n                open: !prev.open\r\n            }\r\n        });\r\n    };\r\n\r\n    getButton(name, value, text, disabled) {\r\n\r\n        let cls = 'gq-btn';\r\n\r\n        const onClick = (e) => {\r\n            if (!disabled) {\r\n                this.setField(name, value);\r\n            }\r\n        };\r\n\r\n        const checked = this.getField(name) === value;\r\n        cls += checked ? ' active' : '';\r\n        cls += disabled ? ' disabled' : '';\r\n\r\n        return (\r\n            <div key={value} className={cls}>\r\n                <button onClick={onClick}>{text}</button>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    // pure component reads only props\r\n    static InvalidCountFromProps(props) {\r\n        return (\r\n            <p className=\"invalid-count\" style={props.count > 0 ? {} : {display: \"none\"}}>\r\n                {props.count} invalid characters were found and replaced with {props.char}\r\n            </p>\r\n        );\r\n    }\r\n\r\n    // shows the length of string and possibly the number of \"invalid replacement characters\" and\r\n    InvalidCountFromString(value) {\r\n\r\n        let lengthRaw = this.getStrlen(value, false);\r\n        let lengthFiltered = this.getStrlen(value, true);\r\n        let invalidCount = parseInt(lengthRaw - lengthFiltered);\r\n        let invalidChar = this.invalidReplacementCharacter;\r\n\r\n        // console.log(\"InvalidCountFromString\", lengthRaw, lengthFiltered, invalidCount );\r\n\r\n        return this.constructor.InvalidCountFromProps({\r\n            count: invalidCount,\r\n            char: invalidChar,\r\n        });\r\n    };\r\n\r\n    // prints label, textarea, possibly invalid count error, and possibly the length of the value,\r\n    TextareaPlus({label, doLength, doInvalid, lengthLabel, ...props}) {\r\n\r\n        let value = this.getField(props.name);\r\n\r\n        // apparently, lengthLabel is not defined by default in function below ... ?\r\n        let _lengthLabel = lengthLabel;\r\n\r\n        let length = doLength && (() => {\r\n\r\n            let lengthFiltered = this.getStrlen(value, true);\r\n            let _lengthLabel = _lengthLabel || \"Length:\";\r\n\r\n            return (\r\n                <div className=\"length\">{_lengthLabel}{` `}<strong>{lengthFiltered}</strong></div>\r\n            );\r\n        })();\r\n\r\n        let cls = \"sub-wrapper \" + \"for-\" + props.name;\r\n\r\n        return (\r\n            <div className={cls}>\r\n                {label && (<this.Label name={props.name}>{label}</this.Label>)}\r\n                <this.Textarea id={this.getHtmlId(props.name)} {...props} />\r\n                {doInvalid && this.InvalidCountFromString(value)}\r\n                {length || \"\"}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // outputs <label htmlFor={this.getHtmlId( props.name )} />\r\n    // but you can just write <this.Label name=\"\" />\r\n    // is it worth it? probably not.\r\n    Label({name, children, ...props}) {\r\n\r\n        let p = Object.assign({}, props, {\r\n            htmlFor: typeof (props.htmlFor) !== 'undefined' ? props.htmlFor : this.getHtmlId(name)\r\n        });\r\n\r\n        return (\r\n            <label {...p}>{children}</label>\r\n        )\r\n    }\r\n\r\n    // prints div containing label and input type checkbox\r\n    Checkbox({disabled, wrapperProps, label, ...props}) {\r\n\r\n        wrapperProps = wrapperProps || {};\r\n        let value = props.value || \"1\";\r\n\r\n        let p = Object.assign({}, props, {\r\n            id: props.id || (this.getHtmlId(props.name) + \"_\" + value),\r\n            checked: typeof (props.checked) !== 'undefined' ? props.checked : props.value && this.getField(props.name) === props.value,\r\n            value: value,\r\n            onChange: props.onChange || this.onChangeCheckbox,\r\n            type: props.type || 'checkbox'\r\n        });\r\n\r\n        let cls = 'gq-checkbox';\r\n        cls += p.inline ? ' inline' : '';\r\n        cls += p.checked ? ' checked' : '';\r\n        cls += disabled ? ' disabled' : '';\r\n\r\n        return (\r\n            <div className={cls} {...wrapperProps}>\r\n                <input {...p} />\r\n                {label && (<label htmlFor={p.id}>{label}</label>)}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // just a textarea\r\n    Textarea(props) {\r\n\r\n        let p = Object.assign({}, props, {\r\n            id: props.id || this.getHtmlId(props.name),\r\n            onChange: props.onChange || this.onChangeBasic,\r\n            value: typeof (props.value) === 'undefined' ? this.getField(props.name) : props.value\r\n        });\r\n\r\n        // if we don't do this, we cannot easily clear the field\r\n        p.value = p.value || \"\";\r\n\r\n        return (\r\n            <textarea {...p} />\r\n        );\r\n    };\r\n\r\n    // just an input\r\n    Input({_ref, ...props}) {\r\n\r\n        let p = Object.assign({}, props, {\r\n            id: props.id || this.getHtmlId(props.name),\r\n            type: props.type || 'text',\r\n            onChange: props.onChange || this.onChangeBasic,\r\n            value: typeof( props.value ) !== 'undefined' ? props.value : this.getField(props.name)\r\n        });\r\n\r\n        if (_ref) {\r\n            p.ref = _ref;\r\n        }\r\n\r\n        return (\r\n            <input {...p} />\r\n        );\r\n    }\r\n\r\n    scrollIntoView() {\r\n        this.domNode.scrollIntoView();\r\n    }\r\n\r\n    renderErrors() {\r\n\r\n        // maybe return nothing instead of printing a hidden div\r\n        if (this.state.errors.length < 1) {\r\n            return;\r\n        }\r\n\r\n        return (\r\n            <div className=\"item-errors\" style={this.state.errors.length > 0 ? {} : {display: \"none\"}}>\r\n                <div className=\"item-errors-inner\">\r\n                    {this.state.errors.map(error => {\r\n                        return (<p>{error}</p>)\r\n                    })}\r\n                </div>\r\n                <p className=\"item-errors-extra\">\r\n                    {this.props.isOrderSummary && (\r\n                        <button className=\"css-reset fix-errors\" onClick={this.onClickEditSelf}>Fix Errors</button>\r\n                    )}\r\n                    {!this.props.isOrderSummary && (\r\n                        <button className=\"css-reset save-changes\"\r\n                                onClick={e => this.props.callbacks.sendToServer('calculate_price', {\r\n                                    savedItemKey: this.props._key\r\n                                })}>Save</button>\r\n                    )}\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderOrderSummaryBody() {\r\n\r\n        let sqt = this.getField('sequence_type');\r\n        let svt = this.getField('service_type');\r\n        let optimize = this.getField('optimize_sequence') === 'yes';\r\n        let kozak = this.getField('add_kozak_sequence') === 'yes';\r\n        let vector = this.getField('vector');\r\n\r\n        let showDeliveryType = (field) => {\r\n            let v = this.getField(field);\r\n            return v && (\r\n                <p>{this.getOptionName('delivery_type', field)}</p>\r\n            );\r\n        };\r\n\r\n        // counts valid and invalid chars in input\r\n        let length = (input) => {\r\n\r\n            let total = this.getStrlen(input, false);\r\n            let valid = this.getStrlen(input, true);\r\n            let invalid = total - valid;\r\n\r\n            return (\r\n                <>\r\n                {total}\r\n                {invalid > 0 && <span className=\"invalid-length\"> + {invalid} invalid</span>}\r\n                </>\r\n            )\r\n        };\r\n\r\n        return (\r\n            <div className=\"item-body is-order-summary\">\r\n                {this.renderErrors()}\r\n                <div className=\"cols\">\r\n                    <div className=\"col col-sequence\">\r\n                        <div className=\"grp grp-sequence\">\r\n                            <p className=\"title\">Sequence</p>\r\n                            <p>{this.getOptionName('sequence_type', sqt)}</p>\r\n                        </div>\r\n                        <div className=\"grp grp-optimize\">\r\n                            <p>\r\n                                <span className=\"v1\">Optimize: {optimize ? \"Yes, \" : \"No\"}</span>\r\n                                {optimize && <span className=\"v2\">{this.getField('expression_system')}</span>}\r\n                                {optimize && <span className=\"v3\">{this.getField('restriction_sites')}</span>}\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"grp grp-kozak\">\r\n                            <p>\r\n                                <span className=\"v1\">Kozak: {kozak ? \"Yes, \" : \"No\"}</span>\r\n                                {kozak && <span className=\"v2\">{this.getField('kozak_sequence')}</span>}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col col-service\">\r\n                        <div className=\"grp grp-service\">\r\n                            <p className=\"title\">Service</p>\r\n                            <p>{this.getOptionName('service_type', svt)}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col col-length\">\r\n                        <div className=\"grp grp-service\">\r\n                            <p className=\"title\">Length (bp)</p>\r\n                            {svt === 'gene_synthesis' && sqt === 'dna' &&\r\n                            <p>{length(this.getField('dna_sequence'))}</p>}\r\n\r\n                            {svt === 'gene_synthesis' && sqt === 'protein' &&\r\n                            <p>{length(this.getField('protein_5_flanking_sequence'))}</p>}\r\n\r\n                            {svt === 'gene_synthesis' && sqt === 'protein' &&\r\n                            <p>{length(this.getField('protein_sequence'))} (x3)</p>}\r\n\r\n                            {svt === 'gene_synthesis' && sqt === 'protein' &&\r\n                            <p>{length(this.getField('protein_3_flanking_sequence'))}</p>}\r\n\r\n                            {svt === 'subcloning' && <p>{length(this.getField('subcloning_sequence_target_gene'))}</p>}\r\n\r\n                            {svt === 'subcloning' &&\r\n                            <p>{length(this.getField('subcloning_sequence_source_plasmid'))}</p>}\r\n\r\n                            {svt === 'subcloning' &&\r\n                            <p>{length(this.getField('subcloning_sequence_final_plasmid'))}</p>}\r\n\r\n                            {svt === 'mutagenesis' && <p>{length(this.getField('mutagenesis_sequence_template'))}</p>}\r\n\r\n                            {svt === 'mutagenesis' && <p>{length(this.getField('mutagenesis_sequence_final'))}</p>}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col col-vector\">\r\n                        <div className=\"grp grp-vector\">\r\n                            <p className=\"title\">Vector</p>\r\n                            {vector !== 'other' && <p>{this.getField('vector')}</p>}\r\n\r\n                            {vector === 'other' && <p>{this.getField('vector_name')}</p>}\r\n                            {vector === 'other' && <p>{this.getField('vector_antibiotic_resistance')}</p>}\r\n                            {vector === 'other' && <p>{this.getField('vector_growth_conditions')}</p>}\r\n                            {/*{todo: Detect if file is attached and show that here}*/}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col col-amount\">\r\n                        <div className=\"grp grp-amount\">\r\n                            <p className=\"title\">Amount</p>\r\n                            <p>{this.getField('delivery_amount')}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col col-cloning-mutations\">\r\n                        <div className=\"grp grp-cloning\">\r\n                            <p className=\"title\">Cloning Sites</p>\r\n                            <p>5': {this.getField('cloning_sites_5') || \"Blunt end cloning\"}</p>\r\n                            <p>3': {this.getField('cloning_sites_3') || \"Blunt end cloning\"}</p>\r\n                        </div>\r\n                        <div className=\"grp grp-mutations\">\r\n                            <p className=\"title\">Mutations / Deletions</p>\r\n                            <p>{sqt === 'mutagenesis' ? this.getField('mutations') : \"-\"}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col col-delivery-type\">\r\n                        <div className=\"grp grp-delivery-type\">\r\n                            {showDeliveryType('delivery_lyophilized')}\r\n                            {showDeliveryType('delivery_glycerol')}\r\n                            {showDeliveryType('delivery_buffer')}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n\r\n        this.fieldWasSet = false;\r\n        this.test.render++;\r\n\r\n        // we use these a lot so local var is easier\r\n        let sequence_type = this.getField('sequence_type');\r\n        let service_type = this.getField('service_type');\r\n\r\n        let allow_optimize_and_kozak = service_type !== 'mutagenesis';\r\n\r\n        let cls = 'order-form-item';\r\n        cls += this.state.errors.length > 0 ? ' has-errors' : '';\r\n\r\n        console.time('itemRender' + this.props._key);\r\n\r\n        const ret = (\r\n            <div className={cls} ref={this.domNode}>\r\n                {/*{Generic.Debugger(\"OrderFormItem\", this)}*/}\r\n                {/*{this.renderTests()}*/}\r\n                <this.memos.ItemHeader\r\n                    dependency_1={this.props.checked}\r\n                    dependency_2={this.props.index}\r\n                    dependency_3={this.props.isOrderSummary}\r\n                    dependency_4={this.getField('gene_name')}\r\n                    dependency_5={this.state.open}\r\n                    dependency_6={this.state.price}\r\n                    dependency_7={this.state.errors.length}\r\n                />\r\n\r\n                {this.props.isOrderSummary ? this.renderOrderSummaryBody() : (\r\n\r\n                    <div className=\"item-body\" style={this.state.open ? {} : {display: 'none'}}>\r\n\r\n                        {this.renderErrors()}\r\n\r\n                        <this.memos.SequenceAndServiceTypeWrapper\r\n                            dependency_1={sequence_type}\r\n                            dependency_2={service_type}\r\n                        />\r\n\r\n                        {service_type === 'gene_synthesis' && sequence_type === 'dna' && (\r\n                            <this.memos.GeneSynthesisDnaWrapper\r\n                                dependency_1={this.getField('dna_sequence')}\r\n                            />\r\n                        )}\r\n                        {service_type === 'gene_synthesis' && sequence_type === 'protein' && (\r\n\r\n                            <this.memos.GeneSynthesisProteinWrapper\r\n                                dependency_1={this.getField('protein_5_flanking_sequence')}\r\n                                dependency_2={this.getField('protein_sequence')}\r\n                                dependency_3={this.getField('protein_3_flanking_sequence')}\r\n                            />\r\n                        )}\r\n                        {service_type === 'subcloning' && (\r\n                            <div className=\"wrapper sequence svt-subcloning\">\r\n\r\n                                <this.memos.SubcloningSequenceTargetGene\r\n                                    dependency_1={this.getField('subcloning_sequence_target_gene')}\r\n                                />\r\n\r\n                                <this.memos.SubcloningSequenceSourcePlasmid\r\n                                    dependency_1={this.getField('subcloning_sequence_source_plasmid')}\r\n                                />\r\n\r\n                                <this.memos.SubcloningSequenceFinalPlasmid\r\n                                    dependency_1={this.getField('subcloning_sequence_final_plasmid')}\r\n                                />\r\n\r\n                            </div>\r\n                        )}\r\n\r\n                        {service_type === 'mutagenesis' && (\r\n                            <div className=\"wrapper sequence svt-mutagenesis\">\r\n\r\n                                <this.memos.MutagenesisSequenceTemplate\r\n                                    dependency_1={this.getField('mutagenesis_sequence_template')}\r\n                                />\r\n\r\n                                <this.memos.MutagenesisSequenceFinal\r\n                                    dependency_1={this.getField('mutagenesis_sequence_final')}\r\n                                />\r\n\r\n                            </div>\r\n                        )}\r\n\r\n                        <this.memos.OptimizeSequenceWrapper\r\n                            allow_optimize_and_kozak={allow_optimize_and_kozak}\r\n                            dependency_2={this.getField('optimize_sequence')}\r\n                            dependency_3={this.getField('expression_system')}\r\n                            dependency_4={this.getField('restriction_sites')}\r\n                        />\r\n\r\n                        <this.memos.KozakSequenceWrapper\r\n                            allow_optimize_and_kozak={allow_optimize_and_kozak}\r\n                            dependency_2={this.getField('add_kozak_sequence')}\r\n                            dependency_3={this.getField('kozak_sequence')}\r\n                        />\r\n\r\n                        <div className=\"bottom-row\">\r\n\r\n                            <this.memos.VectorWrapper\r\n                                dependency_1={this.getField('vector')}\r\n                                dependency_2={this.getField('vector_name')}\r\n                                dependency_3={this.getField('vector_antibiotic_resistance')}\r\n                                dependency_4={this.getField('vector_growth_conditions')}\r\n                            />\r\n\r\n                            <this.memos.CloningSites\r\n                                dependency_1={this.getField('cloning_sites_3')}\r\n                                dependency_2={this.getField('cloning_sites_5')}\r\n                            />\r\n\r\n                            <div className=\"wrapper mutations-delivery\">\r\n\r\n                                <this.memos.MutationsSubWrapper\r\n                                    dependency_1={this.getField('mutations')}\r\n                                    dependency_2={service_type}\r\n                                />\r\n\r\n                                <this.memos.DeliverySubWrapper\r\n                                    dependency_1={this.getField('delivery_amount')}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                            <this.memos.DeliveryTypeWrapper\r\n                                dependency_1={this.getField('delivery_lyophilized')}\r\n                                dependency_2={this.getField('delivery_glycerol')}\r\n                                dependency_3={this.getField('delivery_buffer')}\r\n                            />\r\n\r\n                            <this.memos.addItemButtonWrapper\r\n                                dependency_1=\"dummy_variable_ie_always_used_cached_value\"\r\n                            />\r\n\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n\r\n        console.timeEnd('itemRender' + this.props._key);\r\n\r\n        return ret;\r\n    }\r\n}\r\n\r\n/**\r\n * for expensive to render components due to regex, filtering, length etc.\r\n * could do a class component with a shouldComponentUpdate method\r\n */\r\n// class SequenceInput extends React.Component{\r\n//\r\n//     constructor(props){\r\n//         super(props);\r\n//\r\n//         this.handleChange = this.handleChange.bind(this);\r\n//     }\r\n//\r\n//     shouldComponentUpdate( prevProps ){\r\n//\r\n//         if ( prevProps.value !== this.props.value ) {\r\n//             return true;\r\n//         }\r\n//\r\n//         return false;\r\n//     }\r\n//\r\n//     handleChange(e){\r\n//         this.props.setField( this.props.name, e.target.value );\r\n//     };\r\n//\r\n//     render(){\r\n//\r\n//         let filtered = this.props.filterDna( this.props.value );\r\n//         console.log(\"si render...\", filtered, this.props );\r\n//\r\n//         return (\r\n//             <div className=\"sequence-input\">\r\n//                 <input type=\"text\" name={this.props.name} id={this.props.id} onChange={this.handleChange} value={this.props.value || ''} />\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n\r\n\r\n// memo thing..\r\n\r\n// class MyComponent extends React.Component{\r\n//\r\n//     constructor(){\r\n//\r\n//         super(props);\r\n//\r\n//         this.state = {\r\n//             thing_1: \"\",\r\n//             thing_2: \"\",\r\n//         };\r\n//\r\n//         // proper pure component, only depends on props.\r\n//         this.EasyToCalculateComponent = ( props ) => {\r\n//             return (\r\n//                 <p>{props.thing_1}</p>\r\n//             )\r\n//         };\r\n//\r\n//         // improper pure component which ignores props being passed in.\r\n//         // may access this.props or this.state freely.\r\n//         // however, we manually pass in the props that we know are the only\r\n//         // dependencies that should possibly trigger a re-render of this component.\r\n//         this.HardToCalculateComponent = ( props ) => {\r\n//\r\n//             // accessing the same thing passed in via props, but making a decision not to use props.\r\n//             let result = this.expensiveFunction( this.aFunctionThatReturnsThing2FromState() );\r\n//\r\n//             // its redundant to pass down an onClick function. Instead, we want\r\n//             // access to \"this\" and the methods from within.\r\n//             let onClick = (e) => {\r\n//                 this.registerButtonValue(e.target.value)\r\n//             };\r\n//\r\n//             return (\r\n//                 <div className=\"hard-to-calculate\">\r\n//                     <button onClick={onClick} value={result}></button>\r\n//                 </div>\r\n//             )\r\n//         };\r\n//     }\r\n//\r\n//     render(){\r\n//         return (\r\n//             <div className=\"my-component\">\r\n//                 <EasyToCalculateComponent prop_1={this.state.thing_1} />\r\n//                 <this.HardToCalculateComponent dependency_1={this.state.thing_2} />\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n\r\n\r\n// (?!s)[a-z]\r\n// (?![sf])[a-z]\r\n// (?!(,[\\d],))[a-z]\r\n\r\n// maybe this:\r\n// [,]{1}[^,]{0,}\r\n// [,]{2}[^,]{0,}\r\n// [,]{3}[^,]{0,}\r\n// etc.\r\n// first grp replaces with : ,\r\n// second: ,,\r\n// third: ,,,\r\n// etc.\r\n// nevermind this is dumb....\r\n// unless, we replace in the correct order..\r\n\r\n// let orderedReplacements = [];\r\n//\r\n// let str = this.getField('protein_sequence') || \"\";\r\n// str = str.replace(this.regex.whiteSpace, \"\", str);\r\n//\r\n// str = str.replace(this.regex.stopAndAfter, (match, offset, string) => {\r\n//     orderedReplacements.push('stop');\r\n//     return ',' + ( orderedReplacements.length - 1 ) + ',';\r\n// }, str);\r\n//\r\n// str = str.replace(this.regex.notValidProteinSequence, (match, offset, string) => {\r\n//     orderedReplacements.push(match);\r\n//     return ',' + ( orderedReplacements.length - 1 ) + ',';\r\n// }, str);\r\n//\r\n// console.log(\"1...\", str, orderedReplacements);\r\n//\r\n// // replace \",{integer},\"\r\n// str = str.replace(/(,([0-9]{1,}),)/g, (match, group_1, group_2) => {\r\n//\r\n//     if (group_2 < orderedReplacements.length) {\r\n//         return '<strong>' + orderedReplacements[group_2] + '</strong>';\r\n//     }\r\n//\r\n//     console.error(\"Possible regex issue...\");\r\n//     // shouldn't get to here ideally... wouldn't hurt to return \"\" probably\r\n//     return match;\r\n//\r\n// }, str);\r\n//\r\n// return str || \"TEMP...\";\r\n"],"sourceRoot":""}